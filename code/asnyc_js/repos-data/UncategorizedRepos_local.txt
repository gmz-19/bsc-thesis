{
     "language": "js",
     "construct": null,
     "total_count": 10,
     "time_period": "Start date: 2013-01-01, end date: 2023-01-01",
     "incomplete_results": false,
     "status_code": "200",
     "repositories": [
          {
               "index": 1,
               "repoFullName": "reduxjs/redux-mock-store",
               "creationDate": "2015-10-26",
               "languages": {
                    "JavaScript": 8996
               },
               "stars": 2478,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 14,
                    "total_issues": 93,
                    "issues": [
                         {
                              "title": "update url's in package.json to point to latest location",
                              "description": "Currently package.json refers to `http://arnaudbenard.com/redux-mock-store/` but that url is problematic to get to.  The proper url seems to be `https://github.com/dmitry-zaets/redux-mock-store`\r\n\r\nCan we get package.json fixed up so that the Documentation link on npmjs.org goes to the correct documentation?",
                              "label": "unlabeledBug",
                              "createdAt": "2019-10-11T13:34:37Z",
                              "closedAt": "2019-12-06T07:48:38Z",
                              "lastComment": "2019-12-06T07:48:38Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Fix grammar in repo description",
                              "description": "Remove the first \"your\" in the repo's description, and consider removing both.\r\n\r\n> A mock store for **your** testing your redux async action creators and middleware\r\n\r\nBonus points: capitalize Redux. :)",
                              "label": "unlabeledBug",
                              "createdAt": "2018-01-23T12:27:48Z",
                              "closedAt": "2018-06-13T19:05:40Z",
                              "lastComment": "2018-06-13T19:45:43Z",
                              "commentCount": 3
                         },
                         {
                              "title": "arnaudbenard.com has expired, the documentation can't be accessed",
                              "description": "When trying to view the documentation at http://arnaudbenard.com/redux-mock-store/ \r\nI see a `Domain Expred` message instead of the documentation.\r\n\r\nPlease fix this or move the docs to GitHub Pages/Wiki so it's always available with the code =)",
                              "label": "unlabeledBug",
                              "createdAt": "2017-04-24T11:33:50Z",
                              "closedAt": "2017-04-24T17:03:36Z",
                              "lastComment": "2017-04-24T17:03:36Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Error: cannot find babel preset",
                              "description": "we are using redux-mock-store in a react native project and we are running into this issue:\r\n\r\n![cannotfindpreset](https://cloud.githubusercontent.com/assets/8955144/23075753/a9cb128a-f50b-11e6-8148-f2547ed86f53.png)\r\n\r\nwe are not using `babel-preset-es2015` in our project, but we must install it in order to make this error go away. \r\n\r\nPossible cause: I have looked at the `package.json` file for this package and noticed all the dependencies are listed as devDependencies -- as far as I know , devDependencies for third party modules do not get installed. Additionally, the error message suggests babel is looking for files relative to node_modules/redux-mock-store first. A possible fix would be to list babel-preset-es2015 as a regular dependency instead of a devDependency.",
                              "label": "unlabeledBug",
                              "createdAt": "2017-02-17T17:29:33Z",
                              "closedAt": "2017-04-09T16:24:27Z",
                              "lastComment": "2017-04-08T18:08:32Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Store's getActions method is returning empty during unit test",
                              "description": "I have no idea why this action is array is becoming empty, especially when I log it inside the dispatch action it seems to push it in just fine. Somewhere inside the dispatch of the action it is getting cleared. If anybody has any ideas that would be a great help.\n\nHere is the unit test:\n\n```\nlet response: any = [{ 'displayOrder': -1, 'formTypeId': 3717, 'id': 829, 'name': 'a', 'parentId': 3717 }];\nlet prefix: string ='TestString'\nit('should call RECEIVE_DATA when fetching has been done', () => {\n    nock(someURL)\n        .get('someURL')\n        .reply(200, response);\n\n    let collection: Array<any> = response;\n    const expectedActions = [\n        {\n            type: prefix + '_RECEIVE_DATA',\n            data: Immutable.List<IChildEntity>(collection),\n        }\n    ]\n    const store = mockStore({ MetadataField: [] });\n    let id: number = 3717;\n\n    return store.dispatch(IChildEntityActions.initializeData(prefix, id))\n        .then(\n        () => { // return of async actions\n            Chai.expect(store.getActions()).to.deep.equal(expectedActions);\n        })\n})\n```\n\n})\n",
                              "label": "unlabeledBug",
                              "createdAt": "2016-08-11T21:17:58Z",
                              "closedAt": "2016-08-12T13:00:00Z",
                              "lastComment": "2016-08-12T13:21:24Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Action dispatched in catch statements don't get called.",
                              "description": "I created [this Stackoverflow questions](http://stackoverflow.com/questions/38641979/why-does-redux-mock-store-dont-show-an-action-dispatched-in-catch-promises) a few days ago, but I didn't get an answer. I tried since but I didn't find a solution to the problem.\n\nThe problem basically occurs when I dispatch actions in catch statements. They neither show up in `store.getActions()` nor is the state altert. I described it in relative detail in the question so I won't repeat it here. Feel free to request more info though.\n\nI'm still not sure if it's a bug or if I'm just doing it wrong.\n",
                              "label": "unlabeledBug",
                              "createdAt": "2016-07-30T17:36:37Z",
                              "closedAt": "2016-08-01T19:12:21Z",
                              "lastComment": "2016-08-01T19:12:51Z",
                              "commentCount": 1
                         },
                         {
                              "title": "redux-logger getting used within redux-mock-store?",
                              "description": "In my regular application I have: \n\n``` JavaScript\nimport createLogger from 'redux-logger';\n\nconst logger = createLogger();\n\nconst enhancer = compose(\n  applyMiddleware(thunk, logger),\n  persistState(\n    window.location.href.match(\n      /[?&]debug_session=([^&#]+)\\b/\n    )\n  )\n);\n\nexport default function configureStore(initialState) {\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept('../reducer', () => {\n      store.replaceReducer(require('../reducer').default);\n    });\n  }\n\n  return store;\n```\n\nBut within my tests I have\n\n``` JavaScript\nimport configureMockStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nimport fetchMock from 'fetch-mock';\n\nconst middlewares = [thunk];\nconst mockStore = configureMockStore(middlewares);\n```\n\nBut in my terinal window and withink Karma's Chrome Browser I am getting redux-logger details printed out. `LOG: '%c prev state', 'color: #9E9E9E; font-weight: bold', Object{auth: Object{accessToken: null, userId: null, isAuthenticated: false, isAuthenticating: false, statusText: null}, form: Object{}, header: Object{showAside: false}, routing: Object{locationBeforeTransitions: null}, user: Object{isFetching: false, errors: []}}`\n\nI'm not adding redux-logger to my configureMockStore, only my real store which I am not using for my tests. Is there any way to get rid of redux-logger for tests?\n",
                              "label": "unlabeledBug",
                              "createdAt": "2016-07-06T21:47:32Z",
                              "closedAt": "2016-07-13T00:34:16Z",
                              "lastComment": "2019-09-26T03:30:23Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Async dispatch calls after an error fails",
                              "description": "I have an asynchronous callback calling dispatch. When the previous dispatch fails, the second one is called again and the test fails with `Error: done() called multiple times`. v0.0.4 fixes this with #5 but v0.0.6 breaks it with #7 \n",
                              "label": "unlabeledBug",
                              "createdAt": "2016-02-04T18:43:24Z",
                              "closedAt": "2016-03-10T20:59:33Z",
                              "lastComment": "2016-02-04T23:13:54Z",
                              "commentCount": 1
                         },
                         {
                              "title": "Making the library framework agnostic",
                              "description": "I have noticed that there are multiple bugs related to how testing frameworks handle errors. I have built this library for mocha but it looks like we need to make it work with Jasmine and tape. I would love to get a conversation started on how we can make the library support multiple frameworks.\n\nDo you have examples of framework agnostic testing libraries?\nOr\nShould we make forks for every testing framework?\n### Related issues\n\nhttps://github.com/arnaudbenard/redux-mock-store/issues/12\nhttps://github.com/arnaudbenard/redux-mock-store/issues/13\nhttps://github.com/arnaudbenard/redux-mock-store/issues/16\nhttps://github.com/arnaudbenard/redux-mock-store/issues/21\n\ncc/ @marr @jdmunro @HowardLoTW @dara76\n",
                              "label": "bug",
                              "createdAt": "2016-01-31T20:25:32Z",
                              "closedAt": "2016-03-24T07:51:02Z",
                              "lastComment": "2016-03-02T09:56:36Z",
                              "commentCount": 26
                         },
                         {
                              "title": "Example with tape",
                              "description": "Hi, I am trying to run this library with `tape` but having some trouble. Here is my gist: https://gist.github.com/marr/a3195dadb924a977a00a\n\nI receive the following error when running the test:  ✖ test exited without ending\n",
                              "label": "bug",
                              "createdAt": "2016-01-29T22:24:07Z",
                              "closedAt": "2016-03-10T20:59:02Z",
                              "lastComment": "2016-01-31T19:45:38Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Tests not failing when expectations are not met",
                              "description": "If I set up a test that _should_ fail because the dispatched actions do not meet the expectations, the test is in-fact passing which can be quite dangerous.\n\nThis is using redux-mock-store 0.0.6 and Jest 0.8.2.\n\nI believe the problem lies here:\n\n```\n} catch (e) {\n  if (done) {\n    done(e);\n  }\n  throw e;\n}\n```\n\nI was able to cause the test to fail as expected by simply not calling done, e.g:\n\n```\n} catch (e) {\n  if (done) {\n    //done(e);\n  }\n  throw e;\n}\n```\n\nI'm not 100% sure if this is an issue with this library or one with Jest, therefore I have not put together a PR yet until the matter has been discussed.\n",
                              "label": "bug",
                              "createdAt": "2016-01-15T14:23:52Z",
                              "closedAt": "2016-03-24T07:49:57Z",
                              "lastComment": "2016-03-24T11:17:07Z",
                              "commentCount": 13
                         },
                         {
                              "title": "Error : Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVAL.",
                              "description": "I'm using Jest to do unit test based on Jasmine 2\nWhen I was testing my async action store having Parse query\nIt throws this error :\n''Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVL.\"\n\nHere is my code from __tests_/actions/auth-test.js\n\n```\nit('should creates SIGNUP_REQUEST and SIGNUP_SUCCESS when signup has been done successfully', (done) => {\n\n        /* If this account has already exists in Parse database, it will get SIGNUP_ERROR */\n\n        const expectedActions = [\n            { type: 'SIGNUP_REQUEST', payload: { username, password } },\n            { type: 'SIGNUP_SUCCESS', payload: { user: { /* whatever. Anyway, it needs to be defined */ } } },\n        ];\n\n        const store = mockStore({}, expectedActions, done);\n\n        store.dispatch(Auth.signup(username, password));\n    })\n```\n\nFinally, I revised some code from yours and tested successfully.\nIt seems that the main problem is Jasmine `done()` doesn't be invoked, so it causes this error.\n\nHere is my revised code : \n\n```\nfunction configureMockStore(middlewares = []) {\n\n    return function mockStore(getState, expectedActions, done) {\n\n        if (!Array.isArray(expectedActions)) {\n            throw new Error('expectedActions should be an array of expected actions.');\n        }\n\n        if (typeof done !== 'undefined' && typeof done !== 'function') {\n            throw new Error('done should either be undefined or function.');\n        }\n\n        function mockStoreWithoutMiddleware() {\n            return {\n                getState() {\n                    return typeof getState === 'function' ? getState() : getState;\n                },\n\n                dispatch(action) {\n\n                    const expectedAction = expectedActions.shift();\n\n                    /* Customize for auth action test */\n                    switch(action.type) {\n\n                    case 'SIGNUP_REQUEST':\n                    case 'LOGIN_REQUEST':\n                        expect(action).toEqual(expectedAction);\n                        break;\n                    case 'SIGNUP_SUCCESS':\n                    case 'LOGIN_SUCCESS':\n                        expect(action.type).toEqual(expectedAction.type);\n                        expect(action.payload.user).toBeDefined();\n                        break;\n                    case 'SIGNUP_ERROR':\n                    case 'LOGIN_ERROR':\n                        expect(action.type).toEqual(expectedAction.type);\n                        expect(action.payload.error).toBeDefined();\n                        break;\n                    }\n\n                    if (done && !expectedActions.length) {\n                        done();\n                    }\n\n                    return action;\n                }\n            }\n        }\n\n        const mockStoreWithMiddleware = applyMiddleware(\n            ...middlewares\n        )(mockStoreWithoutMiddleware);\n\n        return mockStoreWithMiddleware();\n    }\n}\n```\n",
                              "label": "bug",
                              "createdAt": "2016-01-08T13:49:15Z",
                              "closedAt": "2016-03-24T07:47:52Z",
                              "lastComment": "2016-03-24T07:47:49Z",
                              "commentCount": 3
                         },
                         {
                              "title": "Test passes even if not all expected actions are dispatched",
                              "description": "I have the following set-up\n`actions.js`\n\n```\nexport function loadData() {\n    return function (dispatch) {\n        dispatch(transactions([876]));\n    };\n}\n```\n\n`actions-test.js` \n\n```\n  jest.dontMock('../actions');\n  jest.dontMock('redux-mock-store');\n  jest.dontMock('redux-thunk');\n\n  const configureMockStore = require('redux-mock-store');\n  const thunk = require('redux-thunk');\n  const middlewares = [ thunk ];\n  const mockStore = configureMockStore(middlewares);\n\ndescribe('actions', () => {    \n  it('should load data', (done) => {\n    const expectedActions = [\n      { type: actions.TRANSACTIONS, transactions : [876] },\n      //{ type: actions.DOES_NOT_EXIST, foo : [] },\n      //{ type: actions.EXISTS, foo : [] }\n    ];\n\n    const store = mockStore({}, expectedActions, done);\n    store.dispatch(actions.loadData());\n  });\n});\n```\n\nRunning the above test passes as expected. \n\nThe problem is if I uncomment \n\n```\n      //{ type: actions.DOES_NOT_EXIST, foo : [] },\n      //{ type: actions.EXISTS, foo : [] }\n```\n\nthe test still passes even though now only one of the 3 `expectedActions` is dispatched.\n\nIs this a bug, or am I misunderstanding something?\n",
                              "label": "bug",
                              "createdAt": "2016-01-06T16:20:57Z",
                              "closedAt": "2016-03-24T07:47:27Z",
                              "lastComment": "2016-03-24T07:47:27Z",
                              "commentCount": 12
                         },
                         {
                              "title": "Properly test with redux-mock-store",
                              "description": "Hello,\n\nI have an action like this\n\n```\nexport function getItems() {\n  return {\n    type: GET_ITEMS,\n    payload: {\n      promise: axios.get(`${domain}:${port}/api/items`)\n    }\n  };\n}\n```\n\nand my testing code\n\n```\nimport promiseMiddleware from 'redux-promise-middleware';\nimport nock from 'nock';\nimport configureStore from 'redux-mock-store';\nimport { domain, port } from '../../config/environment';\n\nimport { GET_ITEMS_START,\n         GET_ITEMS_SUCCESS } from '../../constants/items';\nimport { getItems } from './items';\n\nconst promise = promiseMiddleware({\n  promiseTypeSuffixes: ['START', 'SUCCESS', 'ERROR']\n});\n\n\nconst mockStore = configureStore([promise]);\n\ndescribe('Items Action Creator', () => {\n  describe('Get Items', () => {\n    it('should create GET_ITEMS_SUCCESS action after successfully getting items', (done) => {\n      nock(`${domain}:${port}`)\n        .get('/api/items')\n        .reply(200, {\n          _id: '1',\n          text: 'Make Eggs',\n          completed: false\n        });\n\n      const expectedActions = [\n        { type: GET_ITEMS_START },\n        { type: GET_ITEMS_SUCCESS, payload: {\n          data: {  _id: '1', text: 'Make Eggs', completed: false }\n        }}\n      ];\n\n      const store = mockStore({}, expectedActions, done);\n      store.dispatch(getItems());\n    });\n  });\n```\n\nThis is the result that was being returned\n\n```\n  1) Items Action Creator Get Items should create GET_ITEMS_SUCCESS action after successfully getting items:\n\n      Error: Expected { payload: { config: { headers: {}, method: 'get', timeout: 0, transformRequest: [ [Function] ], transformResponse: [ [Function] ], url: 'http://localhost:3000/api/items', withCredentials: undefined }, data: { _id: '1', completed: false, text: 'Make Eggs' }, headers: {}, status: 200, statusText: 'OK' }, type: 'GET_ITEMS_SUCCESS' } to equal { payload: { data: { _id: '1', completed: false, text: 'Make Eggs' } }, type: 'GET_ITEMS_SUCCESS' }\n      + expected - actual\n\n       {\n         \"payload\": {\n      -    \"config\": {\n      -      \"headers\": {}\n      -      \"method\": \"get\"\n      -      \"timeout\": 0\n      -      \"transformRequest\": [\n      -        [Function]\n      -      ]\n      -      \"transformResponse\": [\n      -        [Function]\n      -      ]\n      -      \"url\": \"http://localhost:3000/api/items\"\n      -      \"withCredentials\": [undefined]\n      -    }\n           \"data\": {\n             \"_id\": \"1\"\n             \"completed\": false\n             \"text\": \"Make Eggs\"\n           }\n      -    \"headers\": {}\n      -    \"status\": 200\n      -    \"statusText\": \"OK\"\n         }\n         \"type\": \"GET_ITEMS_SUCCESS\"\n       }\n```\n\nHow do I just make sure that only the \"data\" property that is being compared instead of the whole payload object\n",
                              "label": "unlabeledBug",
                              "createdAt": "2015-11-28T03:20:48Z",
                              "closedAt": "2015-12-01T18:39:42Z",
                              "lastComment": "2015-12-01T18:39:42Z",
                              "commentCount": 2
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 5,
                    "total_commits": 47,
                    "bug_commits": [
                         {
                              "message": "Fix build issue by using commonJS plugin for rollup, fix issue with babel configs for test.",
                              "created_at": "2018-01-25T19:23:59Z",
                              "sha": "a4eecfde981a40d142dab67df56db00325f9f2cd"
                         },
                         {
                              "message": "fix dependencies",
                              "created_at": "2016-03-10T21:11:21Z",
                              "sha": "4e2be802b468a79e408bbc9412255b943ef7a506"
                         },
                         {
                              "message": "fix tests",
                              "created_at": "2016-01-08T14:28:21Z",
                              "sha": "8bb050dc5f6089448ca7de2eabc96a5f72eee794"
                         },
                         {
                              "message": "fix #5",
                              "created_at": "2015-12-19T08:14:54Z",
                              "sha": "29104c0e974a7b79549cd99fb9ce5b46ea1b6895"
                         },
                         {
                              "message": "fix test and add readme",
                              "created_at": "2015-10-27T10:30:02Z",
                              "sha": "8b7069a5ea01524db746b4819c30a9e2e285a99b"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 1,
                    "promise": 1,
                    "async": 2
               }
          },
          {
               "index": 2,
               "repoFullName": "jaydenseric/apollo-upload-client",
               "creationDate": "2017-02-24",
               "languages": {
                    "JavaScript": 53740
               },
               "stars": 1435,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 41,
                    "total_issues": 253,
                    "issues": [
                         {
                              "title": "Update peer dependency for @apollo/client",
                              "description": "I need to use @apollo/client@3.7.0-alpha.3, because of this issue here -> https://github.com/apollographql/apollo-client/issues/9668\r\n\r\nBut the apollo-upload-client is breaking when I do a ```npm install```\r\n\r\n```npm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR! \r\nnpm ERR! While resolving: undefined@undefined\r\nnpm ERR! Found: @apollo/client@3.7.0-alpha.3\r\nnpm ERR! node_modules/@apollo/client\r\nnpm ERR!   @apollo/client@\"^3.7.0-alpha.3\" from the root project\r\nnpm ERR! \r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @apollo/client@\"^3.0.0\" from apollo-upload-client@17.0.0\r\nnpm ERR! node_modules/apollo-upload-client\r\nnpm ERR!   apollo-upload-client@\"^17.0.0\" from the root project\r\nnpm ERR! \r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR! \r\nnpm ERR! See /home/user/.npm/eresolve-report.txt for a full report.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /home/user/.npm/_logs/2022-05-10T13_37_31_006Z-debug-0.log\r\n```\r\n\r\nVersions:\r\n```\r\n\"apollo-upload-client\": \"^17.0.0\",\r\n\"@apollo/client\": \"^3.7.0-alpha.3\",\r\n\"graphql\": \"^15.8.0\",\r\n\"react\": \"17.0.2\",\r\n\"react-native\": \"0.68.1\",\r\n\"expo\": \"~45.0.0\",\r\n```",
                              "label": "unlabeledBug",
                              "createdAt": "2022-05-10T13:43:14Z",
                              "closedAt": "2022-05-10T16:01:53Z",
                              "lastComment": "2022-05-10T16:01:53Z",
                              "commentCount": 2
                         },
                         {
                              "title": "createUploadLink Appends uri to Apollo Client base uri",
                              "description": "First, apologies if this isn't the correct forum. But this seems to be a rather simple issue which I can't fix.\r\n\r\nI have Apollo Server 3 (Apollo Server Express v.3.5.0) and Apollo Upload Client (v.16.0.0) installed. \r\n\r\nAfter following the relatively simple Apollo upload [tutorial](https://www.apollographql.com/docs/apollo-server/data/file-uploads/), I am facing an issue where the Apollo Client uri is appending the client host to the server link uri.\r\n\r\n![img](https://user-images.githubusercontent.com/55037984/142577168-320ed939-6a52-4f5a-8f7a-46aaac7157c4.png)\r\n\r\nMy Graphql server is hosted at -> http://localhost:8080/api\r\nMy React client is hosted at -> http://localhost:3000\r\n\r\nPreviously, others had this issue ([#114](https://github.com/jaydenseric/apollo-upload-client/issues/114)) when using Apollo Boost. \r\n\r\nMy client setup is very basic:\r\n\r\n`const client = new ApolloClient({\r\n  link: createUploadLink({\r\n    uri: \"http:/localhost:8080/api\",\r\n    credentials: \"include\"\r\n  }),\r\n  cache: new InMemoryCache()\r\n});`\r\n\r\nNot sure what the issue is but any pointers or tips are appreciated!",
                              "label": "unlabeledBug",
                              "createdAt": "2021-11-19T06:49:11Z",
                              "closedAt": "2021-11-27T00:42:14Z",
                              "lastComment": "2021-11-27T01:21:57Z",
                              "commentCount": 2
                         },
                         {
                              "title": "TypeError: Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body.",
                              "description": "Hey there :) \r\n\r\nI'm triing to upload files but since an update i cannot upload anymore.\r\n\r\n```\r\nTypeError: Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body.\r\n    at createUploadLink.js:208\r\n    at new Subscription (module.js:190)\r\n    at Observable.subscribe (module.js:264)\r\n    at index.js:11\r\n    at new Subscription (module.js:190)\r\n    at Observable.subscribe (module.js:264)\r\n    at Object.complete (Concast.js:57)\r\n    at Concast.start (Concast.js:83)\r\n    at new Concast (Concast.js:75)\r\n    at QueryManager.getObservableFromLink (QueryManager.js:562)`\r\n````\r\n\r\n```js\r\nimport { ApolloClient, InMemoryCache, from, ApolloLink } from '@apollo/client';\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path }) =>\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${JSON.stringify(locations)}, Path: ${path}`,\r\n      ),\r\n    );\r\ndebugger\r\n  // eslint-disable-next-line no-console\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconst link = from([\r\n  errorLink,\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  createUploadLink(),\r\n]);\r\n\r\n// Create the client as outlined in the setup guide\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link,\r\n});\r\n\r\n\r\nexport default client;\r\n```\r\n\r\n```js\r\nconst uploadImage = (mutation: DocumentNode) => async (file: unknown, areas?): Promise<IResource> => {\r\n  try {\r\n    const { data } = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        file,\r\n        areas,\r\n      },\r\n    });\r\n    return data.uploadImage;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n```\r\n\r\n  System:\r\n    OS: macOS 11.6\r\n  Binaries:\r\n    Node: 14.17.0 - ~/.nvm/versions/node/v14.17.0/bin/node\r\n    Yarn: 3.0.0 - /usr/local/bin/yarn\r\n    npm: 6.14.13 - ~/.nvm/versions/node/v14.17.0/bin/npm\r\n  Browsers:\r\n    Chrome: 95.0.4638.69\r\n    Firefox: 93.0\r\n    Safari: 15.0\r\n  npmPackages:\r\n    @apollo/client: ^3.4.16 => 3.5.2 \r\n    apollo-upload-client: ^16.0.0 => 16.0.0 \r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2021-11-12T16:39:29Z",
                              "closedAt": "2021-11-13T00:24:55Z",
                              "lastComment": "2021-11-13T07:13:40Z",
                              "commentCount": 3
                         },
                         {
                              "title": "ApolloLink types incompatible in new version of @apollo/client@3.4.5",
                              "description": "Had `httpLink` set up with createUploadLink; it was working prior to updating my dependencies. Now, I am getting this error\r\n\r\n```bash\r\nArgument of type 'ApolloLink' is not assignable to parameter of type 'ApolloLink | RequestHandler'.\r\n  Type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink' is not assignable to type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink'.\r\n    Types of property 'split' are incompatible.\r\n      Type '(test: (op: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/types\").Operation) => boolean, left: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@ap...' is not assignable to type '(test: (op: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/types\").Operation) => boolean, left: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh...'.\r\n        Types of parameters 'left' and 'left' are incompatible.\r\n          Type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/types\").RequestHandler' is not assignable to type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/t...'.\r\n            Type 'ApolloLink' is not assignable to type 'ApolloLink | RequestHandler'.\r\n              Type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink' is not assignable to type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink'.\r\n                Types of property 'split' are incompatible.\r\n                  Type '(test: (op: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/types\").Operation) => boolean, left: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh...' is not assignable to type '(test: (op: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/types\").Operation) => boolean, left: import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@ap...'.\r\n                    Types of parameters 'right' and 'right' are incompatible.\r\n                      Type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@types/apollo-upload-client/node_modules/@apollo/client/link/core/t...' is not assignable to type 'import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/ApolloLink\").ApolloLink | import(\"c:/Users/Anthr/cortina-ssh/next-headless/cortina-headless/node_modules/@apollo/client/link/core/types\").RequestHandler | undefined'.\r\n                        Type 'ApolloLink' is not assignable to type 'ApolloLink | RequestHandler | undefined'.ts(2345)\r\n```\r\n\r\nMy apolloClient.ts file:\r\n\r\n```ts\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  NormalizedCacheObject,\r\n  ApolloLink,\r\n  PossibleTypesMap\r\n} from '@apollo/client';\r\nimport { from } from '@apollo/client/link/core';\r\nimport {\r\n  errorLink,\r\n  httpLink,\r\n  wooSessionMiddleware,\r\n  wooSessionAfterware\r\n} from './middleware';\r\nimport { relayStylePagination } from '@apollo/client/utilities';\r\nimport result, { PossibleTypesResultData } from './fragment-matcher';\r\nimport merge from 'deepmerge';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useMemo } from 'react';\r\n\r\nexport type CacheDerivedPropName<T extends keyof NormalizedCacheObject> = {\r\n  [P in keyof T]?: T[P];\r\n};\r\n\r\nexport type PossibleTypesMapped<\r\n  T extends keyof PossibleTypesResultData['possibleTypes']\r\n> = {\r\n  [P in T]: PossibleTypesResultData['possibleTypes'][P];\r\n};\r\n\r\nexport const APOLLO_STATE_PROP_NAME: CacheDerivedPropName<'__APOLLO_STATE__'> =\r\n  '__APOLLO_STATE__';\r\n\r\nlet apolloClient: ApolloClient<NormalizedCacheObject> | undefined;\r\n\r\nfunction createApolloClient() {\r\n  const { possibleTypes } = result as PossibleTypesResultData;\r\n  return new ApolloClient({\r\n    ssrMode: typeof window === 'undefined',\r\n    link: from([\r\n      errorLink,\r\n      wooSessionMiddleware,\r\n      wooSessionAfterware,\r\n      httpLink\r\n    ]),\r\n    connectToDevTools: true,\r\n    cache: new InMemoryCache({\r\n      possibleTypes: { ...possibleTypes } as PossibleTypesMap,\r\n      typePolicies: {\r\n        Query: {\r\n          fields: {\r\n            User: {\r\n              // merge?: boolean | FieldMergeFunction<TExisting, TIncoming> | undefined;\r\n              // mergeObjects: FieldFunctionOptions<Record<string, any>, Record<string, any>>\r\n              merge(existing, incoming, { mergeObjects }) {\r\n                // Invoking nested merge functions\r\n                return mergeObjects(existing, incoming);\r\n              }\r\n            },\r\n            posts: relayStylePagination()\r\n          }\r\n        }\r\n      }\r\n    })\r\n  });\r\n}\r\n\r\nexport type InitialState = NormalizedCacheObject | null;\r\n\r\nexport function initializeApollo(initialState: InitialState = null) {\r\n  const _apolloClient = apolloClient ?? createApolloClient();\r\n\r\n  // Hydrate Initial State of Apollo Client Data Fetching Methods Here\r\n  if (initialState) {\r\n    // Get existing cache, loaded only during client side data fetching\r\n    const existingCache = _apolloClient.extract();\r\n\r\n    // Merge existing cache into data passed from getStaticProps/getServerSideProps\r\n    const data = merge(initialState, existingCache, {\r\n      // combine arrays using obj equality -- same concept as Sets\r\n      arrayMerge: (destinationArray, sourceArray) => [\r\n        ...sourceArray,\r\n        ...destinationArray.filter(d => sourceArray.every(s => !isEqual(d, s)))\r\n      ]\r\n    });\r\n\r\n    // Restore the cache with the merged data\r\n    _apolloClient.cache.restore(data);\r\n  }\r\n\r\n  // SSG and SSR: always create a new Apollo Client\r\n  if (typeof window === 'undefined') return _apolloClient;\r\n\r\n  // Create the Apollo Client once in the Client\r\n  if (!apolloClient) apolloClient = _apolloClient;\r\n  return _apolloClient;\r\n}\r\n\r\nexport function addApolloState(\r\n  client: ApolloClient<NormalizedCacheObject>,\r\n  pageProps: any\r\n) {\r\n  if (pageProps?.props) {\r\n    pageProps.props[APOLLO_STATE_PROP_NAME] = client.cache.extract();\r\n  }\r\n  return pageProps;\r\n}\r\n\r\nexport function useApollo(pageProps: any) {\r\n  const state = pageProps[APOLLO_STATE_PROP_NAME];\r\n  const store = useMemo(() => initializeApollo(state), [state]);\r\n  return store;\r\n}\r\n\r\n```\r\n\r\nThe corresponding `apollo-middleware.ts` file:\r\n\r\n```ts\r\nimport { ApolloLink } from '@apollo/client';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport { IncomingHttpHeaders } from 'http';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\nconst token = process.env.GRAPHQL_JWT_AUTH_SECRET_KEY ?? '';\r\nconst endpoint = process.env.NEXT_PUBLIC_WPENGINE_ENDPOINT ?? '';\r\n\r\nconst enhancedFetch = async (\r\n  url: RequestInfo,\r\n  init: RequestInit,\r\n  headers: IncomingHttpHeaders | null = null\r\n) => {\r\n  return await fetch(url, {\r\n    ...init,\r\n    headers: {\r\n      ...init.headers,\r\n      Cookie: headers?.cookie ? headers.cookie : ''\r\n    },\r\n    keepalive: true,\r\n    method: 'POST'\r\n  }).then(response => response);\r\n};\r\nexport const httpLink = createUploadLink({\r\n  uri: `${endpoint}`,\r\n  credentials: 'include',\r\n  includeExtensions: true,\r\n  fetch: enhancedFetch,\r\n  fetchOptions: {\r\n    mode: 'cors'\r\n  },\r\n  headers: {\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n    'Transfer-Encoding': 'chunked',\r\n    'Content-Type': 'application/json; charset=utf-8',\r\n    Connection: 'keep-alive',\r\n    Authorization: `Bearer ${token}`,\r\n    'x-jwt-auth': `Bearer ${token}`,\r\n    Accept: '*/*'\r\n  }\r\n});\r\nexport const errorLink: ApolloLink = onError(\r\n  ({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors)\r\n      graphQLErrors.forEach(({ message, locations, path, extensions }) =>\r\n        console.log(\r\n          JSON.stringify(\r\n            `[GraphQL error]: \\n [Message]: ${message}, \\n [Location]: ${locations}, \\n [Path]: ${path}, \\n [Extension]: ${extensions}`,\r\n            null,\r\n            2\r\n          )\r\n        )\r\n      );\r\n    if (networkError)\r\n      console.log(\r\n        JSON.stringify(\r\n          `[Network error]: Backend is unreachable... \\n\r\n          [name]: ${networkError.name} \\n\r\n          [message]: ${networkError.message} \\n\r\n          [stack]: ${networkError.stack}`,\r\n          null,\r\n          2\r\n        )\r\n      );\r\n  }\r\n);\r\nconst isBrowser = typeof window !== 'undefined';\r\nexport const wooSessionMiddleware = new ApolloLink((operation, forward) => {\r\n  const session = isBrowser && window.localStorage.getItem('woo-session');\r\n  operation.setContext(({ headers = {} }) => ({\r\n    headers: {\r\n      ...headers,\r\n      'woocommerce-session':\r\n        isBrowser && window.localStorage.getItem('woo-session')\r\n          ? `Session ${session}`\r\n          : null\r\n    }\r\n  }));\r\n  return forward(operation);\r\n});\r\n\r\nexport const wooSessionAfterware = new ApolloLink((operation, forward) => {\r\n  return forward(operation).map(response => {\r\n    const context = operation.getContext();\r\n    const {\r\n      response: { headers }\r\n    } = context;\r\n    const session = headers.get('woocommerce-session');\r\n    if (session) {\r\n      if ('false' === session) {\r\n        isBrowser && window.localStorage.removeItem('woo-session');\r\n      } else if (\r\n        isBrowser &&\r\n        window.localStorage.getItem('woo-session') !== session\r\n      ) {\r\n        window.localStorage.setItem(\r\n          'woo-session',\r\n          headers.get('woocommerce-session')\r\n        );\r\n      }\r\n    }\r\n    return response;\r\n  });\r\n});\r\n\r\n```\r\n\r\n---\r\n\r\nTemp fix: had to revert back to HttpLink 😿 \r\n\r\n```ts\r\nexport const httpLink = new HttpLink({\r\n  uri: `${endpoint}`,\r\n  credentials: 'include',\r\n  includeExtensions: true,\r\n  fetch: enhancedFetch,\r\n  fetchOptions: {\r\n    mode: 'cors'\r\n  },\r\n  headers: {\r\n    'Accept-Encoding': 'gzip, deflate, br',\r\n    'Transfer-Encoding': 'chunked',\r\n    'Content-Type': 'application/json; charset=utf-8',\r\n    Connection: 'keep-alive',\r\n    Authorization: `Bearer ${token}`,\r\n    'x-jwt-auth': `Bearer ${token}`,\r\n    Accept: '*/*'\r\n  }\r\n});\r\n```\r\n\r\n##### package.json contents\r\n```json\r\n{\r\n  \"name\": \"cortina-headless\",\r\n  \"version\": \"1.0.0\",\r\n  \"repository\": \"https://github.com/CortinaHealth/cortina-headless.git\",\r\n  \"author\": \"Andrew Ross <andrew.simpson.ross@gmail.com>\",\r\n  \"license\": \"CC BY-NC-ND 4.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"test\": \"jest\",\r\n    \"test-all\": \"yarn lint && yarn type-check && yarn test\",\r\n    \"codegen\": \"graphql-codegen --config codegen.yml -r dotenv/config\",\r\n    \"dev\": \"next dev -p 3060\",\r\n    \"vercel:dev\": \"vercel dev --listen 3060\",\r\n    \"prod:build\": \"yarn codegen && yarn build\",\r\n    \"dev:debug\": \"cross-env NODE_OPTIONS='--inspect' next -p 3060\",\r\n    \"build\": \"next build\",\r\n    \"analyze\": \"cross-env ANALYZE=true next build\",\r\n    \"analyze:size\": \"cross-env ANALYZE=1 next build && cat .next/stats.txt\",\r\n    \"find:unused\": \"next-unused\",\r\n    \"tsconfig:effective\": \"tsc --showConfig\",\r\n    \"pretty:quick\": \"yarn pretty-quick --staged\",\r\n    \"prepare\": \"husky install\",\r\n    \"lint\": \"eslint . --ext ts --ext tsx --ext js\",\r\n    \"format\": \"prettier --write .\",\r\n    \"type-check\": \"tsc --pretty --noEmit\"\r\n  },\r\n  \"lint-staged\": {\r\n    \"*.@(ts|tsx)\": [\r\n      \"yarn lint\",\r\n      \"yarn format\"\r\n    ]\r\n  },\r\n  \"next-unused\": {\r\n    \"alias\": {\r\n      \"@/apollo/*\": [\r\n        \"src/apollo/*\"\r\n      ],\r\n      \"@/components/*\": [\r\n        \"src/components/*\"\r\n      ],\r\n      \"@/graphql/*\": [\r\n        \"src/graphql/*\"\r\n      ],\r\n      \"@/lib/*\": [\r\n        \"src/lib/*\"\r\n      ],\r\n      \"@/pages/*\": [\r\n        \"src/pages/*\"\r\n      ],\r\n      \"@/styles/*\": [\r\n        \"src/styles/*\"\r\n      ],\r\n      \"@/test/*\": [\r\n        \"src/test/*\"\r\n      ],\r\n      \"@/types/*\": [\r\n        \"src/types/*\"\r\n      ],\r\n      \"@/utils/*\": [\r\n        \"src/utils/*\"\r\n      ]\r\n    },\r\n    \"debug\": true,\r\n    \"include\": [\r\n      \"src/pages\",\r\n      \"src/components\",\r\n      \"src/lib\"\r\n    ],\r\n    \"exclude\": [],\r\n    \"entrypoints\": [\r\n      \"src/pages\"\r\n    ]\r\n  },\r\n  \"dependencies\": {\r\n    \"@apollo/client\": \"^3.4.5\",\r\n    \"@react-spring/web\": \"^9.2.4\",\r\n    \"@stripe/react-stripe-js\": \"^1.4.1\",\r\n    \"@stripe/stripe-js\": \"^1.16.0\",\r\n    \"apollo-upload-client\": \"^16.0.0\",\r\n    \"autoprefixer\": \"^10.3.1\",\r\n    \"body-scroll-lock\": \"4.0.0-beta.0\",\r\n    \"classnames\": \"^2.3.1\",\r\n    \"cookie\": \"^0.4.1\",\r\n    \"date-fns\": \"^2.23.0\",\r\n    \"debounce\": \"^1.2.1\",\r\n    \"dompurify\": \"^2.3.0\",\r\n    \"graphql\": \"^15.5.1\",\r\n    \"graphql-upload\": \"^12.0.0\",\r\n    \"html-react-parser\": \"^1.2.7\",\r\n    \"isomorphic-unfetch\": \"^3.1.0\",\r\n    \"js-cookie\": \"^3.0.0\",\r\n    \"keen-slider\": \"^5.5.1\",\r\n    \"next\": \"^11.0.2-canary.24\",\r\n    \"next-seo\": \"^4.26.0\",\r\n    \"next-themes\": \"^0.0.15\",\r\n    \"postcss\": \"^8.3.6\",\r\n    \"postcss-import\": \"^14.0.2\",\r\n    \"postcss-nesting\": \"^8.0.1\",\r\n    \"preact\": \"^10.5.14\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-fast-marquee\": \"^1.2.1\",\r\n    \"react-intersection-observer\": \"^8.32.0\",\r\n    \"react-merge-refs\": \"^1.1.0\",\r\n    \"react-use-measure\": \"^2.0.4\",\r\n    \"stripe\": \"^8.168.0\",\r\n    \"swr\": \"^0.5.6\",\r\n    \"tabbable\": \"^5.2.0\",\r\n    \"tailwindcss\": \"^2.2.7\",\r\n    \"vercel\": \"^23.1.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.15.0\",\r\n    \"@babel/eslint-parser\": \"^7.15.0\",\r\n    \"@babel/preset-env\": \"^7.15.0\",\r\n    \"@babel/preset-typescript\": \"^7.15.0\",\r\n    \"@graphql-codegen/add\": \"^3.0.0\",\r\n    \"@graphql-codegen/cli\": \"2.0.1\",\r\n    \"@graphql-codegen/fragment-matcher\": \"3.0.0\",\r\n    \"@graphql-codegen/named-operations-object\": \"^2.0.0\",\r\n    \"@graphql-codegen/schema-ast\": \"^2.0.0\",\r\n    \"@graphql-codegen/typed-document-node\": \"^2.0.0\",\r\n    \"@graphql-codegen/typescript\": \"2.0.0\",\r\n    \"@graphql-codegen/typescript-apollo-client-helpers\": \"^2.0.0\",\r\n    \"@graphql-codegen/typescript-document-nodes\": \"^2.0.0\",\r\n    \"@graphql-codegen/typescript-operations\": \"2.0.1\",\r\n    \"@graphql-codegen/typescript-react-apollo\": \"3.0.0\",\r\n    \"@graphql-typed-document-node/core\": \"^3.1.0\",\r\n    \"@headlessui/react\": \"^1.4.0\",\r\n    \"@next/bundle-analyzer\": \"^11.0.1\",\r\n    \"@next/eslint-plugin-next\": \"^11.0.1\",\r\n    \"@tailwindcss/aspect-ratio\": \"^0.2.1\",\r\n    \"@tailwindcss/forms\": \"^0.3.3\",\r\n    \"@tailwindcss/jit\": \"^0.1.18\",\r\n    \"@tailwindcss/typography\": \"^0.4.1\",\r\n    \"@testing-library/dom\": \"^8.1.0\",\r\n    \"@testing-library/jest-dom\": \"^5.14.1\",\r\n    \"@testing-library/react\": \"^12.0.0\",\r\n    \"@testing-library/user-event\": \"^13.2.1\",\r\n    \"@types/apollo-upload-client\": \"^14.1.0\",\r\n    \"@types/body-scroll-lock\": \"^2.6.2\",\r\n    \"@types/cookie\": \"^0.4.1\",\r\n    \"@types/debounce\": \"^1.2.0\",\r\n    \"@types/dompurify\": \"^2.2.3\",\r\n    \"@types/duplicate-package-checker-webpack-plugin\": \"^2.1.2\",\r\n    \"@types/graphql-upload\": \"^8.0.6\",\r\n    \"@types/gtag.js\": \"^0.0.7\",\r\n    \"@types/jest\": \"^26.0.24\",\r\n    \"@types/js-cookie\": \"^2.2.7\",\r\n    \"@types/lodash.debounce\": \"^4.0.6\",\r\n    \"@types/lodash.isequal\": \"^4.5.5\",\r\n    \"@types/lodash.merge\": \"^4.6.6\",\r\n    \"@types/lodash.random\": \"^3.2.6\",\r\n    \"@types/lodash.throttle\": \"^4.1.6\",\r\n    \"@types/lodash.tonumber\": \"^4.0.6\",\r\n    \"@types/node\": \"^16.4.12\",\r\n    \"@types/react\": \"^17.0.15\",\r\n    \"@types/react-dom\": \"^17.0.9\",\r\n    \"@types/react-test-renderer\": \"^17.0.1\",\r\n    \"@types/tabbable\": \"^3.1.1\",\r\n    \"@types/tailwindcss\": \"^2.2.1\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^4.29.0\",\r\n    \"@typescript-eslint/parser\": \"^4.29.0\",\r\n    \"babel-jest\": \"^27.0.6\",\r\n    \"babel-plugin-module-resolver\": \"^4.1.0\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"cssnano\": \"^5.0.7\",\r\n    \"deepmerge\": \"^4.2.2\",\r\n    \"dotenv\": \"^10.0.0\",\r\n    \"dotenv-cli\": \"^4.0.0\",\r\n    \"duplicate-package-checker-webpack-plugin\": \"^3.0.0\",\r\n    \"eslint\": \"^7.32.0\",\r\n    \"eslint-config-next\": \"^11.0.1\",\r\n    \"eslint-config-prettier\": \"^8.3.0\",\r\n    \"eslint-import-resolver-typescript\": \"^2.4.0\",\r\n    \"eslint-plugin-import\": \"^2.23.4\",\r\n    \"eslint-plugin-jest\": \"^24.4.0\",\r\n    \"eslint-plugin-jsx-a11y\": \"^6.4.1\",\r\n    \"eslint-plugin-react\": \"^7.24.0\",\r\n    \"eslint-plugin-react-hooks\": \"^4.2.0\",\r\n    \"eslint-plugin-yml\": \"^0.10.0\",\r\n    \"husky\": \"^7.0.1\",\r\n    \"identity-obj-proxy\": \"^3.0.0\",\r\n    \"jest\": \"^27.0.6\",\r\n    \"jest-diff\": \"^27.0.6\",\r\n    \"jest-matcher-css\": \"^1.1.0\",\r\n    \"jest-mock-extended\": \"^2.0.1\",\r\n    \"jest-watch-typeahead\": \"^0.6.4\",\r\n    \"lint-staged\": \"^11.1.1\",\r\n    \"next-sitemap\": \"^1.6.148\",\r\n    \"next-unused\": \"^0.0.6\",\r\n    \"patch-package\": \"^6.4.7\",\r\n    \"postcss-flexbugs-fixes\": \"^5.0.2\",\r\n    \"postcss-preset-env\": \"^6.7.0\",\r\n    \"postinstall-postinstall\": \"^2.1.0\",\r\n    \"prettier\": \"^2.3.2\",\r\n    \"pretty-quick\": \"^3.1.1\",\r\n    \"react-test-renderer\": \"^17.0.2\",\r\n    \"stylelint\": \"^13.13.1\",\r\n    \"stylelint-config-recommended\": \"^5.0.0\",\r\n    \"tailwindcss-line-clamp\": \"^1.0.5\",\r\n    \"ts-jest\": \"^27.0.4\",\r\n    \"typescript\": \"^4.3.5\",\r\n    \"webpack\": \"^5.48.0\",\r\n    \"webpack-bundle-size-analyzer\": \"^3.1.0\",\r\n    \"yaml-loader\": \"^0.6.0\"\r\n  }\r\n}\r\n\r\n```",
                              "label": "unlabeledBug",
                              "createdAt": "2021-08-06T00:07:45Z",
                              "closedAt": "2021-08-06T00:11:37Z",
                              "lastComment": "2021-08-06T00:11:37Z",
                              "commentCount": 1
                         },
                         {
                              "title": "upgraded to v15 breaks build",
                              "description": "updated to latest version:\r\n\r\n```\r\n\"apollo-client\": \"^2.6.10\",\r\n\"apollo-link-context\": \"^1.0.20\",\r\n\"apollo-link-http\": \"^1.5.17\",\r\n\"apollo-upload-client\": \"^15.0.0\",\r\n```\r\n\r\nbut now get an error on build: \r\n\r\n```\r\n.\\node_modules\\apollo-upload-client\\public\\createUploadLink.js\r\nCannot find module: '@apollo/client/core'. Make sure this package is installed.\r\n\r\nYou can install this package by running: npm install @apollo/client/core.\r\n```\r\n\r\nrunning `npm install @apollo/client/core` does not work. node v14\r\n\r\n\r\n```\r\nnpm install --save @apollo/client/core\r\nnpm ERR! code ENOLOCAL\r\nnpm ERR! Could not install from \"@apollo\\client\\core\" as it does not contain a package.json file.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\user\\AppData\\Roaming\\npm-cache\\_logs\\2021-06-01T19_05_21_583Z-debug.log\r\n```",
                              "label": "unlabeledBug",
                              "createdAt": "2021-06-01T19:06:55Z",
                              "closedAt": "2021-06-02T00:06:12Z",
                              "lastComment": "2021-06-02T00:11:01Z",
                              "commentCount": 2
                         },
                         {
                              "title": "iOS: uploaded image bigger than the original ",
                              "description": "Hi,\r\nWe are experiencing an issue when uploading an image JPG with iOS with `apollo-upload-client`.\r\nThe image is taken from the gallery (original size is around 2.4 MB) and we compress it to around 500 kB. We upload it to server with a mutation where we use `graphql-upload` with middleware `graphqlUploadExpress` using `ReactNativeFile`. However, when we check the image on S3, the image is 2 MB. We tried with several images and the result is similar: uploaded image is bigger than the compressed one.\r\nWe tried to upload the image without the middleware using a plain POST request and in this case, the image was uploaded with the expected size (500 kB).\r\nInteresting that we do not have the same problem with Android using the same code. Any suggestion for debugging it?\r\n\r\ncf. https://github.com/jaydenseric/graphql-upload/issues/82",
                              "label": "unlabeledBug",
                              "createdAt": "2021-05-07T16:02:45Z",
                              "closedAt": "2021-05-11T00:52:44Z",
                              "lastComment": "2021-05-11T07:09:56Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Upload cors error",
                              "description": "Hi Dear,\r\nWhen use credentials include processing upload and after minute show cors error every one can help me for fix it?\r\nthis my my error\r\n\r\n![Capture](https://user-images.githubusercontent.com/36853974/117359609-ded51500-aecc-11eb-8f4c-6d1bd12f6b82.PNG)\r\n \r\n**Server Code:**\r\n```\r\nconst apolloServer = new ApolloServer({\r\n  typeDefs: typeDefs,\r\n  resolvers: resolvers,\r\n  schemaDirectives,\r\n  subscriptions: {\r\n    onConnect: (connectionParams, ws) => {\r\n      sessionMiddleware(ws.upgradeReq, {}, () => {\r\n        if (!getUserId(ws.upgradeReq)) {\r\n          throw new AuthenticationError(\"you must be sigin\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n  context: contexts,\r\n  uploads: false,\r\n  introspection: process.env.NODE_ENV !== \"production\",\r\n  playground:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? false\r\n      : {\r\n          settings: {\r\n            \"editor.theme\": \"light\",\r\n            \"request.credentials\": \"include\",\r\n          },\r\n        },\r\n});\r\n\r\napp.use(\r\n  cors({\r\n    origin: [\"https://explore.mazust.ac.ir\", \"https://apiexplore.mazust.ac.ir\"],\r\n    credentials: true,\r\n  })\r\n);\r\n\r\napp.use(graphqlUploadExpress());\r\n\r\napolloServer.applyMiddleware({ app, cors: false });\r\n```\r\n\r\n**Client Code:**\r\n\r\n```\r\nimport React from \"react\";\r\nimport {\r\n  ApolloClient,\r\n  ApolloLink,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  split,\r\n} from \"@apollo/client\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { getMainDefinition } from \"@apollo/client/utilities\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\n\r\nconst parseHeaders = (rawHeaders) => {\r\n  const headers = new Headers();\r\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n  // https://tools.ietf.org/html/rfc7230#section-3.2\r\n  const preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, \" \");\r\n  preProcessedHeaders.split(/\\r?\\n/).forEach((line) => {\r\n    const parts = line.split(\":\");\r\n    const key = parts.shift().trim();\r\n    if (key) {\r\n      const value = parts.join(\":\").trim();\r\n      headers.append(key, value);\r\n    }\r\n  });\r\n  return headers;\r\n};\r\n\r\nexport const uploadFetch = (url, options) =>\r\n  new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = true;\r\n    xhr.onload = () => {\r\n      const opts = {\r\n        status: xhr.status,\r\n        statusText: xhr.statusText,\r\n        headers: parseHeaders(xhr.getAllResponseHeaders() || \"\"),\r\n      };\r\n      opts.url =\r\n        \"responseURL\" in xhr\r\n          ? xhr.responseURL\r\n          : opts.headers.get(\"X-Request-URL\");\r\n      const body = \"response\" in xhr ? xhr.response : xhr.responseText;\r\n      resolve(new Response(body, opts));\r\n    };\r\n    xhr.onerror = () => {\r\n      reject(new TypeError(\"Network request failed\"));\r\n    };\r\n    xhr.ontimeout = () => {\r\n      reject(new TypeError(\"Network request failed\"));\r\n    };\r\n    xhr.open(options.method, url, true);\r\n\r\n    Object.keys(options.headers).forEach((key) => {\r\n      xhr.setRequestHeader(key, options.headers[key]);\r\n    });\r\n\r\n    if (xhr.upload) {\r\n      xhr.upload.onprogress = options.onProgress;\r\n    }\r\n\r\n    options.onAbortPossible(() => {\r\n      xhr.abort();\r\n    });\r\n\r\n    xhr.send(options.body);\r\n  });\r\n\r\nconst customFetch = (uri, options) => {\r\n  if (options.onProgress) {\r\n    return uploadFetch(uri, options);\r\n  }\r\n  return fetch(uri, options);\r\n};\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, forward, operation }) => {\r\n    if (graphQLErrors)\r\n      graphQLErrors.map(({ message, extensions, path }) => {\r\n        if (extensions.code === \"UNAUTHENTICATED\") {\r\n          return (window.location = \"/\");\r\n        }\r\n\r\n        return forward(operation);\r\n      });\r\n\r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  }\r\n);\r\n\r\nconst httpLink = new ApolloLink.from([\r\n  errorLink,\r\n  new ApolloLink((operation, forward) => {\r\n    return forward(operation);\r\n  }),\r\n  createUploadLink({\r\n    uri: process.env.REACT_APP_SERVER_HOST,\r\n    credentials: \"include\",\r\n    fetch: customFetch,\r\n  }),\r\n]);\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: process.env.REACT_APP_WS_SERVER_HOST,\r\n  options: {\r\n    lazy: true,\r\n    reconnect: true,\r\n  },\r\n});\r\n\r\nconst isSubscription = (operation) => {\r\n  const definition = getMainDefinition(operation.query);\r\n  return (\r\n    definition.kind === \"OperationDefinition\" &&\r\n    definition.operation === \"subscription\"\r\n  );\r\n};\r\n\r\nexport const client = new ApolloClient({\r\n  cache: cache,\r\n  link: split(isSubscription, wsLink, httpLink),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: \"cache-and-network\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Apollo({ children }) {\r\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\r\n}\r\n\r\nexport default Apollo;\r\n\r\n```\r\n\r\n**Nginx Config For Api:**\r\n\r\n```\r\nserver {\r\n    listen       443 ssl;\r\n    listen       [::]:443 ssl;\r\n    server_name  apiexplore.mazust.ac.ir;\r\n\r\n    ssl_certificate      \"C:/ssl/cert.pem\";\r\n    ssl_certificate_key  \"C:/ssl/key.key\";\r\n\r\n    ssl_session_cache    shared:SSL:1m;\r\n    ssl_session_timeout  5m;\r\n\r\n    ssl_ciphers  HIGH:!aNULL:!MD5;\r\n    ssl_prefer_server_ciphers  on;\r\n\r\n    location / {\r\n     proxy_pass http://localhost:4077;\r\n\r\n     proxy_http_version 1.1;\r\n     proxy_set_header Upgrade $http_upgrade;\r\n     proxy_set_header Connection 'upgrade';\r\n     proxy_set_header Host $host;\r\n     proxy_set_header X-Forwarded-For $remote_addr;\r\n     proxy_set_header X-Forwarded-Host $host;\r\n     proxy_set_header X-Forwarded-Proto $scheme;\r\n     proxy_cache_bypass $http_upgrade;   \r\n\r\n    # THESE ARE IMPORTANT\r\n     proxy_set_header X-Real-IP $remote_addr;\r\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n    } \r\n}\r\n\r\nserver {\r\n  listen 80;\r\n  server_name apiexplore.mazust.ac.ir;\r\n  return 301 https://apiexplore.mazust.ac.ir$request_uri;\r\n\r\n}\r\n```\r\n\r\nPlease help.",
                              "label": "unlabeledBug",
                              "createdAt": "2021-05-06T20:19:35Z",
                              "closedAt": "2021-05-06T22:43:57Z",
                              "lastComment": "2021-05-06T22:43:57Z",
                              "commentCount": 1
                         },
                         {
                              "title": "Empty object being sent to server",
                              "description": "Hi there,\r\n\r\nBefore I start, I have seen [this](https://github.com/jaydenseric/graphql-upload/issues/73) issue , which seems to be similar however the issue I am facing appears to be on the client - hence posting this here.\r\n\r\nI have been using `apollo-upload-client` now since September 2020 when version `14.1.2` release. This has been working perfectly in my application along side the following related packages across my front and backend:\r\n\r\n`\"@apollo/client\": \"3.2.5\"`\r\n` \"graphql\": \"15.4.0\"`\r\n`\"graphql-upload\": \"11.0.0\",`\r\n`\"apollo-server-express\": \"2.19\",`\r\n\r\n\r\nThe implementation of that on the frontend was as follows, using formiks `setFieldValue` on the `onChange` for an `input` tag:\r\n\r\n```js\r\nonChange={(event) => { props.setFieldValue('userPhoto', event.currentTarget.files[0]) }}\r\n``` \r\nFor context, this is the related set up in my apollo client:\r\n\r\n```js\r\nimport { createUploadLink } from 'apollo-upload-client'\r\n\r\n// Using createUploadLink and not new HttpLink as its required for file uploads\r\nconst httpLink = createUploadLink({\r\n  uri: process.env.NODE_ENV === 'production' ? 'https://api.mydomain.comt' : 'http://test.mydomain.com:4000',\r\n  credentials: 'include',\r\n  headers: {\r\n    Origin: 'https://mydomain.com'\r\n  }\r\n})\r\n```\r\n\r\n\r\nAs mentioned, this set up was working perfectly and files were uploading correctly - and have been for months. I therefore dont think the issue I am now facing is down to the implementation of any specific package (unless implementation has changed based on the following).\r\n\r\nToday I decided to update packages, updating `apollo-upload-client` to `14.1.3` and updating the above related packages to the following:\r\n`\"@apollo/client\": \"3.3.15\"`\r\n`\"graphql\": \"15.5.0\"`\r\n`\"graphql-upload\": \"11.0.0\"` (No change)\r\n`apollo-server-express: \"2.23.0\"`\r\n\r\n\r\nWhen I now go to upload a file, the upload fails with this error:\r\n\r\n`Variable \"$input\" got invalid value {} at \"input.userPhoto\"; Upload value invalid.`\r\n\r\nI am not too sure if some dependancy is known to be incompatible and I should rollback, or if there is something else I am missing, or if there is a bug in this latest version?\r\n\r\nTo note, I tried changing the upload `onChange` event to use `event.target.files[0]`, which also resulted in this same error.\r\n\r\nThanks",
                              "label": "unlabeledBug",
                              "createdAt": "2021-04-22T16:24:36Z",
                              "closedAt": "2021-04-22T23:21:13Z",
                              "lastComment": "2021-04-22T23:21:13Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Apollo-Server-Express using graphqlUploadExpress multiple files Question",
                              "description": "I am having an issue when trying to  upload multiple files using Apollo-Server-Express (2.19.0) and graphqlUploadExpress (11.0.0) if I add multiple files it seems to be missing the `file` from anything after the 1st object in the array.\r\n\r\nAny ideas as to what's causing the other items to fail?\r\n\r\n**typeDef**\r\n```\r\nmodule.exports = gql`\r\n    scalar Upload\r\n    extend type Mutation {\r\n        singleFileUpload(file: Upload!): File!\r\n        multipleFileUpload(files: [Upload!]!): [File]   \r\n    }\r\n\r\n    type File {\r\n        success: Boolean!\r\n        message: String\r\n        filename: String\r\n        uuid: String\r\n        localPath: String\r\n        serverPath: String\r\n        url: String\r\n        mimetype: String\r\n        encoding: String\r\n    }\r\n`;\r\n```\r\n\r\n**server.js**\r\n```\r\napp.use(graphqlUploadExpress({ maxFileSize: 50000000, maxFiles: 20}));\r\nnew ApolloServer({\r\n    typeDefs,\r\n    resolvers,\r\n    context: ({ req, res }) => ({\r\n      models,\r\n      user: req.user,\r\n      req,\r\n      res\r\n    }),\r\n    uploads: false});\r\n```\r\n**resolver**\r\n```\r\nconst processUpload = async (upload) => {\r\n    const { filename, mimetype, encoding, createReadStream } = await upload.file;\r\n    const { ext } = parse(filename);\r\n    const typeDir = mimeTypeUploadDirectory(mimetype);\r\n    const dateDir = submissionFolderDateStructure();\r\n    const stream = createReadStream();\r\n    const id = uuid();\r\n    const uploadLocation = `${dateDir}/${typeDir}`;\r\n    const baseLocation = `${UPLOAD_PATH}/${uploadLocation}`;\r\n    const fileLocation = `${baseLocation}/${id}${ext}`;\r\n    const localPath = join(__dirname, `src/../${fileLocation}`);\r\n    const serverPath = `${uploadLocation}/${id}${ext}`;\r\n    const url = `${URL}/${serverPath}`;\r\n\r\n    mkdirp.sync(join(__dirname, `${baseLocation}`));\r\n\r\n    return new Promise((resolve, reject) => {\r\n        stream\r\n            .on('error', (error) => {\r\n                if (error) unlink(localPath);\r\n                reject({\r\n                    success: false,\r\n                    message: error.message\r\n                });\r\n            })\r\n            .pipe(createWriteStream(localPath))\r\n            .on('finish', () => {\r\n                resolve({\r\n                    success: true,\r\n                    message: null,\r\n                    filename,\r\n                    uuid: id,\r\n                    localPath,\r\n                    serverPath,\r\n                    url,\r\n                    mimetype,\r\n                    encoding\r\n                });\r\n            });\r\n    });\r\n\r\n}\r\n//TODO: add in auth stuff\r\nconst resolver = {\r\n    Mutation: {\r\n        singleFileUpload: async (_, { file }) => {\r\n            return await processUpload(file);\r\n        },\r\n        //BUGFIX: items in the array after the first array are missing the file\r\n        multipleFileUpload: async (_, { files }) => {\r\n            let objArr = (await Promise.all(files)).map(processUpload);\r\n            console.log(objArr);\r\n            return objArr;\r\n        }\r\n    }\r\n}\r\n```\r\n![mutation](https://user-images.githubusercontent.com/3682042/101786237-b1c23900-3acb-11eb-8ce7-9faa90d04d89.png)\r\n![multiple_files_upload_debug](https://user-images.githubusercontent.com/3682042/101786253-b555c000-3acb-11eb-810c-78002f6f4fd7.png)\r\n![returned_promises](https://user-images.githubusercontent.com/3682042/101786263-b850b080-3acb-11eb-9477-a4b8acf79dff.png)\r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2020-12-10T14:41:07Z",
                              "closedAt": "2020-12-10T16:16:32Z",
                              "lastComment": "2021-03-06T09:59:17Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Can't compile in Webpack 5",
                              "description": "Hi! `apollo-upload-client` is making calls into `extract-files` without the file extensions, which is breaking builds in Webpack 5. \r\n\r\n```\r\nModule not found: Error: Can't resolve 'extract-files/public/ReactNativeFile' \r\nin 'node_modules/apollo-upload-client/public'\r\n\r\nModule not found: Error: Can't resolve 'extract-files/public/extractFiles' \r\nin 'reporting-renovate/node_modules/apollo-upload-client/public'\r\n\r\nModule not found: Error: Can't resolve 'extract-files/public/isExtractableFile' \r\nin 'node_modules/apollo-upload-client/public'\r\n```\r\n\r\nThe fix seems to be to just include `.js` for all three `require` statements.",
                              "label": "unlabeledBug",
                              "createdAt": "2020-10-18T22:24:29Z",
                              "closedAt": "2020-10-18T22:29:25Z",
                              "lastComment": "2022-02-10T18:53:25Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Can not compile with typescript, module resolution failed with \"extract-files\" package.",
                              "description": "Hi\r\nThere was an issue with this lately but it was resolved in CRA webpack config. As that config can read and understand only senior webpack devs i couldn't find the place where they fixed that issue. So what exactly should i write in webpack config to solve that issue ? \r\n```Module not found: Error: Can't resolve 'extract-files/public/ReactNativeFile'```\r\n```Module not found: Error: Can't resolve 'extract-files/public/extractFiles'```\r\n```Module not found: Error: Can't resolve 'extract-files/public/isExtractableFile'```\r\n\r\nthanks\r\nI guess it's tsc that cann't resolve commonJS modules. ",
                              "label": "unlabeledBug",
                              "createdAt": "2020-10-15T14:22:29Z",
                              "closedAt": "2020-10-16T00:14:18Z",
                              "lastComment": "2020-10-17T18:06:39Z",
                              "commentCount": 3
                         },
                         {
                              "title": "Fetch errors not working correctly with the useMutation React hook",
                              "description": "When I use createUploadLink in my React app \r\n```\r\nconst httpLink = createUploadLink({\r\n  uri: 'http://localhost:4000/graphql\"',\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([authMiddleware, httpLink]),\r\n  cache: new InMemoryCache(),\r\n});\r\n```\r\nI cannot catch errors thrown by Mutations using `useMutation()`\r\n```\r\nconst onSubmit = (data) => {\r\n    mutationLogin({ variables: data })\r\n      .then // it works when the mutation doesn't throw\r\n      .catch // never goes in it even when the mutation throw\r\n```\r\nAnd on the browser console I get the error below\r\n```\r\ncreateUploadLink.js:148 Fetch failed loading: POST \"http://localhost:4000/graphql\".\r\n```\r\nAnd when use HttpLink from `@apollo/client` it works perfectly fine\r\n```\r\nconst httpLink = new HttpLink({\r\n  uri: 'http://localhost:4000/graphql\"',\r\n});\r\n```",
                              "label": "bug",
                              "createdAt": "2020-09-08T13:47:23Z",
                              "closedAt": "2020-09-12T03:51:16Z",
                              "lastComment": "2020-09-12T04:15:05Z",
                              "commentCount": 5
                         },
                         {
                              "title": "Showing \"Type 'ApolloLink' is missing the following properties from type 'ApolloLink': onError, setOnError\" in newly released @apollo/client@version3.1.1 in TypeScript React",
                              "description": "In ApolloClient() constructor the link property is giving the following type error of \r\n```sh\r\nType 'ApolloLink' is missing the following properties from type 'ApolloLink': onError, setOnError\r\n```\r\nI don't know why causing this error. But I found a solution to get rid of the type error from a github thread (don't know the thread link).\r\n```ts\r\nconst client = new ApolloClient({link: auth_link.concat((link as unknown) as ApolloLink) , cache, typeDefs, resolvers})\r\n``` \r\n\r\nIt fixes the following error of typechecking but it doesn't seem to be ideal. I'm actually concating the `createUploadLink()` with another `ApolloLink()`. \r\nHere's the code of my `index.tsx`\r\n\r\n```tsx\r\nimport  {ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { typeDefs, resolvers } from './state/typeDefs';\r\nimport {from, ApolloLink} from \"@apollo/client/core\"\r\nimport { LOGIN_LOCAL, SIGNED_UP } from './schema/local/Query';\r\nconst link = createUploadLink({uri: \"http://localhost:4000\"})\r\n\r\nconst cache = new InMemoryCache()\r\n//Auth checking link\r\nconst auth_link = new ApolloLink((operation, forward)=>{\r\n  const refresh_token = localStorage.getItem(\"refresh_token\"\")\r\n  const auth_token = localStorage.getItem(\"auth_token\")\r\n  operation.setContext({\r\n    headers: {\r\n      \"Authorization\": `Bearer ${auth_token}`,\r\n      \"Refresh\": `Bearer ${refresh_token}`}\r\n    })\r\n    return forward(operation)\r\n  })\r\n                                                            // ! Temporary Type Check Fix\r\nconst client = new ApolloClient({link: auth_link.concat((link as unknown) as ApolloLink) , cache, typeDefs, resolvers})\r\n//Local State initializing\r\ncache.writeQuery({query: LOGIN_LOCAL, data: {loggedIn: false}})\r\ncache.writeQuery({query: SIGNED_UP, data: {signedUp: false}})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n```\r\n\r\nBut it seems to work fine if I use a regular `createHttpLink()` in my `ApolloClient()` constructor.\r\nDon't know what's happening. But please give me better a solution. I'm in a urgent need.\r\n\r\nThanks❤ for making this great package. Saves a lot of time.....",
                              "label": "unlabeledBug",
                              "createdAt": "2020-08-01T18:24:35Z",
                              "closedAt": "2020-08-01T23:51:43Z",
                              "lastComment": "2020-09-16T08:50:43Z",
                              "commentCount": 5
                         },
                         {
                              "title": "Properly support the signal fetch option",
                              "description": "Initialy brought up in https://github.com/jaydenseric/apollo-upload-client/issues/204#issuecomment-662173801 .\r\n\r\nApollo Client with `HttpLink` doesn’t support aborting queries via standard `fetch` and `AbortControler` signals. You're only supposed to somehow use the Apollo Client subscription system:\r\n\r\nhttps://github.com/apollographql/apollo-client/issues/4150\r\n\r\nApollo’s `HttpLink` documentation for the option `fetchOptions` doesn't mention that the standard `signal` fetch option should not be used:\r\n\r\nhttps://www.apollographql.com/docs/link/links/http/#options\r\n\r\nAlthough the `HttpLink` code defers to a user configured `signal`, it will conflict with the way Apollo Client works:\r\n\r\nhttps://github.com/apollographql/apollo-client/blob/3c56a1d7a696ed63b2d3681aab0c23b8ea0831db/src/link/http/createHttpLink.ts#L89\r\n\r\nIf the user supplies a signal that aborts the fetch, a `return` is used that causes the observable to never progress:\r\n\r\nhttps://github.com/apollographql/apollo-client/blob/3c56a1d7a696ed63b2d3681aab0c23b8ea0831db/src/link/http/createHttpLink.ts#L134-L135\r\n\r\nIn that situation, if you did `await apolloClient.query(` it would never resolve; Node.js detects the promise is stuck in a pending status and skips the rest of your code without an error.\r\n\r\nPreviously we closely replicated the `HttpLink` logic for all this, but once we have tests we can fix this bug properly.\r\n\r\nThere should be a distinction between an a fetch `AbortError` before, vs after, the observer cleanup. Such an error before the cleanup function runs should be treated like any other fetch error. After cleanup begins, it will be ignored because there is nothing subscribed to errors anymore anyway.",
                              "label": "bug",
                              "createdAt": "2020-07-22T06:45:25Z",
                              "closedAt": "2020-07-22T07:06:14Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "Typescript error with @apollo/client v3",
                              "description": "Hello,\r\n\r\nI'm getting the following Typescript error: `Type 'ApolloLink' is missing the following properties from type 'ApolloLink': onError, setOnError  TS2739`\r\n\r\nBelow is a snippet of code I am using:\r\n\r\n```ts\r\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: createUploadLink({\r\n    uri: '/api',\r\n    credentials: 'same-origin',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n});\r\n```\r\n\r\nand I'm using the following package versions\r\n\r\n```json\r\n// package.json\r\n\r\n\"@apollo/client\": \"^3.0.2\",\r\n\"@types/apollo-upload-client\": \"^8.1.3\",\r\n```\r\n\r\nYou can fix with the following code, although this is not an ideal solution:\r\n\r\n```ts\r\nexport const apolloClient = new ApolloClient({\r\n  link: (createUploadLink({\r\n    uri: '/api',\r\n    credentials: 'same-origin',\r\n  }) as unknown) as ApolloLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n```\r\n\r\nI think the types are using the older version of apollo-link https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/apollo-upload-client/index.d.ts",
                              "label": "unlabeledBug",
                              "createdAt": "2020-07-20T05:17:22Z",
                              "closedAt": "2020-07-20T05:20:50Z",
                              "lastComment": "2020-07-30T02:54:51Z",
                              "commentCount": 3
                         },
                         {
                              "title": "Upload image from React Native to Apollo Server not working?",
                              "description": "This is not a bug with the library but a question from my side\r\n\r\nI have created my backend with Nodejs and Apollo Server. I am trying to upload an image from my React Native client. Here is my backend code\r\n\r\n```\r\nMutation: {\r\n    async singleUpload(_, { fileInput: { file, fileName } }) {\r\n      try {\r\n        const { createReadStream, filename, mimetype } = await file;\r\n        const stream = createReadStream();\r\n        const path = `./upload/${filename}`;\r\n\r\n        const tempFile = { id: 123, filename, mimetype, path };\r\n        await new Promise((resolve, reject) => {\r\n          const writeStream = createWriteStream(path);\r\n\r\n          // When the upload is fully written, resolve the promise.\r\n          writeStream.on(\"finish\", resolve);\r\n\r\n          // If there's an error writing the file, remove the partially written file\r\n          // and reject the promise.\r\n          writeStream.on(\"error\", (error) => {\r\n            unlink(path, () => {\r\n              reject(error);\r\n            });\r\n          });\r\n\r\n          // In node <= 13, errors are not automatically propagated between piped\r\n          // streams. If there is an error receiving the upload, destroy the write\r\n          // stream with the corresponding error.\r\n          stream.on(\"error\", (error) => writeStream.destroy(error));\r\n\r\n          // Pipe the upload into the write stream.\r\n          stream.pipe(writeStream);\r\n        });\r\n        ...then upload it to Firebase Storage\r\n```\r\n\r\nWhen I use Altair plugin for Firefox browser to upload image , it works fine.\r\n\r\nNow for my React Native client, I am using apollo-upload-client lib. After a user picks image using the Image Picker plugin for React Native , I am creating a file\r\n\r\n```\r\nconst file = new ReactNativeFile({\r\n            uri: image.uri,\r\n            type: image.type,\r\n            name: 'Hi there',\r\n          });\r\n```\r\n\r\nNow when I upload it I get an error saying from my backend saying TypeError: createReadStream is not a function which I understand as there is no createReadStream parameter in my ReactNativeFile\r\n\r\nso I decided to change my backend code to something like this\r\n\r\n```\r\nconst { name, type } = await file;\r\n        console.log(\"Mime\" + type);\r\n        const stream = fs.createReadStream(name);\r\n```\r\n\r\n`fs module is from nodejs Now when I try uploading image from Altair or from React Native , I get an error saying`\r\n\r\n`[Error: ENOENT: no such file or directory,`\r\n\r\nDue to my lack of knowledge of backend I am not sure what is causing the issue. I think if I try uploading it from ReactJS instead of React Native, my code might work for the backend. But the image picker for browser and native mobile are very much different and I have not tried doing with ReactJS for now\r\n\r\nI am following this article [moon highway](https://moonhighway.com/how-the-upload-scalar-works) for my backend code",
                              "label": "unlabeledBug",
                              "createdAt": "2020-06-21T07:36:05Z",
                              "closedAt": "2020-06-27T05:28:01Z",
                              "lastComment": "2020-06-27T06:54:24Z",
                              "commentCount": 3
                         },
                         {
                              "title": "Error with rollup and version 13.0.0",
                              "description": "Hello and thanks for this fantastic package.\r\n\r\nUsing svelte and rollup, after updating from 12.1.0 to 13.0.0 I got this error compiling\r\n`[!] (plugin svelte) Error: Package subpath './package.json' is not defined by \"exports\" in /home/xxx/xxx/admin/node_modules/extract-files/package.json`\r\n\r\nRolling back to 12.1.0 fixes the issue\r\n\r\nEnvironment:\r\nSvelte 3.20.1\r\nrollup 2.3.2\r\nnode 13.12.0\r\nnpm 6.14.4",
                              "label": "unlabeledBug",
                              "createdAt": "2020-04-01T08:15:29Z",
                              "closedAt": "2020-04-03T01:50:20Z",
                              "lastComment": "2020-04-07T12:39:07Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Internal Server Error with KeystoneJS image upload: Missing multipart field ‘operations’",
                              "description": "I'm trying to upload an image to KeystoneJS.  The image corresponds to the KeystoneJS list `Image`,  with the following GraphQL schema\r\n\r\n    mutation createImage(data: ImageCreateInput): Image\r\n    \r\n    input ImageCreateInput {\r\n      file: Upload\r\n    }\r\n\r\nI'm uploading from TinyMCE, which here is a custom field inside the [KeystoneJS AdminUI][1].  Following the following instructions (https://stackoverflow.com/questions/60656730/how-can-one-upload-an-image-to-a-keystonejs-graphql-endpoint/60657015#60657015) I'm using `Apollo-upload-client` to upload the image, which apparently is already installed in the AdminUI as the Apollo Client.  Following the `Apollo-upload-client` [docs][2]  I am uploading the blob from inside the TinyMCE `images_upload_handler`\r\n\r\n\r\n\r\n    const UPLOAD_MUTATION = gql`mutation upload($data: ImageCreateInput!) {\r\n        createImage(data: $data) {\r\n          id\r\n          file {\r\n            path\r\n            filename\r\n          }\r\n        }\r\n      }\r\n    `;\r\n    \r\n    images_upload_handler: function(blobInfo, success, failure) {\r\n    \r\n    \t\t\tconst image = blobInfo.blob();\r\n    \t\t\ttry {\r\n    \t\t\t\tlog.debug('about to mutate');\r\n    \t\t\t\tlog.debug(client);\r\n    \t\t\t\tclient.mutate(\r\n    \t\t\t\t{\r\n    \t\t\t\tmutation: UPLOAD_MUTATION,\r\n    \t\t\t\tvariables: { data: { file: image } }\r\n    \t\t\t\t}\r\n    \t\t\t\t).then(result => {\r\n    \t\t\t\tlog.debug('result');\r\n    \t\t\t\tlog.debug(result);\r\n    \t\t\t\tsuccess(result);\r\n    \t\t\t\t});\r\n    \t\t\t\t} catch (e) {\r\n    \t\t\t\tlog.debug('error', e.toString());\r\n    \t\t\tfailure(e);\r\n    \t\t\t}\r\n    \t}\r\n\r\nhowever KeystoneJS logs the following error, complaining of `Missing multipart field 'operations'`.  \r\n\r\n> {\"level\":50,\"time\":1584092923059,\"pid\":29020,\"hostname\":\"somewhere.or.other\",\"name\":\"graphql\",\"message\":\"Missing\r\n> multipart field ‘operations’\r\n> (https://github.com/jaydenseric/graphql-multipart-request-spec).\",\"extensions\":{\"code\":\"INTERNAL_SERVER_ERROR\"},\"uid\":\"ck7q00y3x0000e4rjfevaapo3\",\"stack\":\"<Original\r\n> stack missing>\\n    module.exports\r\n> (node_modules/ensure-error/index.js:28:16)\\n    _formatError\r\n> (node_modules/@keystonejs/app-graphql/lib/apolloServer.js:97:44)\\n   \r\n> node_modules/apollo-server-errors/dist/index.js:167:34\\n    Array.map\r\n> (<anonymous>)\\n    Object.formatApolloErrors\r\n> (node_modules/apollo-server-errors/dist/index.js:165:27)\\n   \r\n> node_modules/apollo-server-express/dist/ApolloServer.js:47:39\\n   \r\n> runMicrotasks (<anonymous>)\\n\",\"name\":\"BadRequestError\",\"v\":1}\r\n\r\nI'm a relative newbie with GraphQL and the answers I've found regarding this error and `apollo-upload-client` seem addressed to those mounting their own Apollo Servers, whereas I'm working with something already set up.  Any clues or help much appreciated!\r\n\r\n\r\n  [1]: https://www.keystonejs.com/keystonejs/app-admin-ui/\r\n  [2]: https://github.com/jaydenseric/apollo-upload-client#blob",
                              "label": "unlabeledBug",
                              "createdAt": "2020-03-13T10:26:47Z",
                              "closedAt": "2020-03-29T06:51:01Z",
                              "lastComment": "2020-03-30T07:11:51Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Bug: `fetch` is not defined when running on the server",
                              "description": "I am using this as a part of Angular Universal application. While working in the browser, it's working perfectly. When I build a server version (SSR) it breaks with the following error:\r\n\r\n```\r\nReferenceError: fetch is not defined\r\n    at z2dT.exports.createUploadLink (\r\n```\r\n\r\n```javascript\r\nexports.createUploadLink = ({\r\n  uri: fetchUri = '/graphql',\r\n  fetch: linkFetch = fetch,\r\n  fetchOptions,\r\n  credentials,\r\n  headers,\r\n  includeExtensions\r\n} = {}) => {\r\n  const linkConfig = {\r\n    http: { includeExtensions },\r\n    options: fetchOptions,\r\n    credentials,\r\n    headers\r\n  }\r\n```\r\n\r\nThis is because `fetch` does not work on node. This is how I am using it (unnecessary lines removed):\r\n\r\n```typescript\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\n\r\nexport function createApollo(httpLink: HttpLink) {\r\n  const http = httpLink.create({ uri });\r\n  const uploadLink = createUploadLink({ uri });\r\n\r\n  const authLink = new ApolloLink((operation, forward) => {\r\n  ...\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    link: from([authLink, uploadLink, http]),\r\n  });\r\n\r\n  return client;\r\n}\r\n```\r\n\r\nUpon removing the `uploadLink` and the dependency the application is build and work as expected except for the upload of course.",
                              "label": "unlabeledBug",
                              "createdAt": "2019-07-26T18:17:34Z",
                              "closedAt": "2019-07-26T18:42:58Z",
                              "lastComment": "2020-09-30T03:33:51Z",
                              "commentCount": 4
                         },
                         {
                              "title": "could it be possible that on long uploads mutation may called twice?",
                              "description": "I'm trying to debug really strange problem, which I don't know is connected to apollo-upload-client or not, but my resolver function on uploading file is called twice.\r\n\r\nI have a heavy transcoding by ffmpeg triggered by upload and when it is really long (around 2-3 minutes) at some point resolver function is called again and as a result two files is uploaded. \r\n\r\nInterestingly enough there is a Network error (when second call is already fired and some time is passed):\r\n\r\n```\r\nbundle.esm.js:73 Uncaught (in promise) Error: Network error: Failed to fetch\r\n    at new ApolloError (bundle.esm.js:73)\r\n    at Object.error (bundle.esm.js:1309)\r\n    at notifySubscription (Observable.js:157)\r\n    at onNotify (Observable.js:196)\r\n    at SubscriptionObserver.error (Observable.js:253)\r\n    at notifySubscription (Observable.js:157)\r\n    at onNotify (Observable.js:196)\r\n    at SubscriptionObserver.error (Observable.js:253)\r\n    at Object.error (bundle.esm.js:51)\r\n    at notifySubscription (Observable.js:157)\r\n    at onNotify (Observable.js:196)\r\n    at SubscriptionObserver.error (Observable.js:253)\r\n    at eval (index.js:94)\r\n```\r\n\r\nSo, I think may be it is an issue with fetch (sorry, couldn't wrap my head around this for a several days!)\r\n\r\nSo, just in case somebody was upon something similar?",
                              "label": "unlabeledBug",
                              "createdAt": "2019-06-27T19:15:52Z",
                              "closedAt": "2019-07-02T11:48:47Z",
                              "lastComment": "2019-07-02T11:48:47Z",
                              "commentCount": 4
                         },
                         {
                              "title": "Angular Universal (SSR) not working when this plugin is used",
                              "description": "Hey,\r\n\r\nI've been struggling to figure out an extremely weird bug that seems to be caused somehow by this plugin.\r\n\r\nI'm using Angular, GraphQL/Apollo and this upload plugin all on their latest version. I was trying to set up Angular Universal but somehow certain route resolvers didn't resolve properly and I didn't get the full pre-rendered page back. After painstaking debugging, I noticed it only happened when a GraphQL call was made (non of them had anything to do with uploading though). So step by step I was disabling things that were not essential to load a certain page in my project. It turned out that the once I replaced the `createUploadLink` method with a normal, basic `httpLink.create` it all started to work.\r\n\r\nMy current working code is using this:\r\n```ts\r\nconst STATE_KEY = makeStateKey('apollo.state');\r\n\r\nconst isBrowser = this.transferState.hasKey<any>(STATE_KEY);\r\nconst options: HttpOptions = { uri: `${environment.api}/graphql` };\r\nconst http = isBrowser ? createUploadLink(options) : httpLink.create(options);\r\n\r\nthis.apollo.create({\r\n  link: http,\r\n  cache: new InMemoryCache()\r\n});\r\n```\r\nAs you can see I simply do not allow the `createUploadLink` to be used when `isBrowser` is not true. This is not a fix but a workaround of course, but it works for me because I don't need to upload anything while prerendering.\r\n\r\nSo in other words, I'm pretty sure this plugin does something to mess up the resolvers, I just can't figure out what makes that happen.\r\n\r\nTo go a bit more into detail about my findings:\r\n1. It doesn't matter if my resolver returned an `Observable` or a `Promise`, both stopped before the call completed\r\n2. The Apollo calls complete anyway as I received the data. It just \"finalized\" the SSR request before it was going to use the data it received from the server.\r\n\r\nIt's hard for me to pinpoint where this issue comes from exactly, but it might be very useful information for people using this plugin and Angular Universal. I hope @jaydenseric will have some kind of epiphany based on this description 😉 \r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2019-04-30T13:03:22Z",
                              "closedAt": "2019-05-01T07:48:50Z",
                              "lastComment": "2019-05-01T07:48:50Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Dates handled differently in v10.0.0?",
                              "description": "In an angular app, we use `v9.1.0` and the date variables are transformed into the ISO format e.g. `2019-01-10T22:00:00.000Z` when the request is send over the network. However, with `v10.0.0` this is not the case. The same value is send as an empty object `{}`. Is this behavior intended?\r\n\r\nTo explain it better please check this demo:\r\nhttps://stackblitz.com/edit/apollo-upload-client-date-bugv10\r\n\r\nwhere the following error is reported in the console:\r\n```\r\n\"Variable \"$input\" got invalid value {}; Expected type String; String cannot represent a non string value: {}\"\r\n```\r\nNow if you downgrade to `v9.1.0` it returns a successful response:\r\n```\r\nechoDate: \"2019-01-11T16:24:27.656Z\"\r\n```\r\nPS. If you need to peek the server it is here: https://codesandbox.io/s/nwnpyw93lm  ",
                              "label": "unlabeledBug",
                              "createdAt": "2019-01-11T16:32:07Z",
                              "closedAt": "2019-01-21T03:50:49Z",
                              "lastComment": "2019-01-21T06:35:58Z",
                              "commentCount": 6
                         },
                         {
                              "title": "Failed to compile. I can't generate a production build.",
                              "description": "Hi. I have a project that uses apollo-upload-client. I have tried to compile my project (build), but iv got that error.\r\n\r\n> Creating an optimized production build...\r\n> Failed to compile.\r\n> \r\n> Failed to minify the code from this file:\r\n> \r\n>         ./node_modules/apollo-upload-client/lib/index.js:3\r\n> \r\n> Read more here: http://bit.ly/2tRViJ9\r\n> \r\n> npm ERR! code ELIFECYCLE\r\n> npm ERR! errno 1\r\n> npm ERR! client@0.1.0 build: `react-scripts build`\r\n> npm ERR! Exit status 1\r\n> npm ERR!\r\n> npm ERR! Failed at the client@0.1.0 build script.\r\n> npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n> \r\n> npm ERR! A complete log of this run can be found in:\r\n> npm ERR!     /Users/olesodynets/.npm/_logs/2018-10-31T20_30_08_712Z-debug.log\r\n\r\nWhat's the problem?",
                              "label": "unlabeledBug",
                              "createdAt": "2018-10-31T20:33:40Z",
                              "closedAt": "2018-11-01T03:00:41Z",
                              "lastComment": "2018-11-01T03:00:41Z",
                              "commentCount": 2
                         },
                         {
                              "title": "TypeError: \"h is not a function\" \tcreateUploadLink",
                              "description": "I ejected my web application to make `apollo-upload-client ` work.\r\n\r\npackage.json\r\n\r\n```json\r\n{\r\n  \"name\": \"project-snow-frontend\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@babel/core\": \"7.1.0\",\r\n    \"@svgr/webpack\": \"2.4.1\",\r\n    \"apollo-cache-inmemory\": \"^1.3.5\",\r\n    \"apollo-client\": \"^2.4.2\",\r\n    \"apollo-link\": \"^1.2.3\",\r\n    \"apollo-link-context\": \"^1.0.9\",\r\n    \"apollo-link-error\": \"^1.1.1\",\r\n    \"apollo-link-http\": \"^1.5.5\",\r\n    \"apollo-link-state\": \"^0.4.2\",\r\n    \"apollo-upload-client\": \"^9.0.0\",\r\n    \"babel-core\": \"7.0.0-bridge.0\",\r\n    \"babel-eslint\": \"9.0.0\",\r\n    \"babel-jest\": \"23.6.0\",\r\n    \"babel-loader\": \"8.0.4\",\r\n    \"babel-plugin-named-asset-import\": \"^0.2.2\",\r\n    \"babel-preset-react-app\": \"^5.0.2\",\r\n    \"bfj\": \"6.1.1\",\r\n    \"bootstrap\": \"^4.1.3\",\r\n    \"case-sensitive-paths-webpack-plugin\": \"2.1.2\",\r\n    \"chalk\": \"2.4.1\",\r\n    \"css-loader\": \"1.0.0\",\r\n    \"dotenv\": \"6.0.0\",\r\n    \"dotenv-expand\": \"4.2.0\",\r\n    \"eslint\": \"5.6.0\",\r\n    \"eslint-config-react-app\": \"^3.0.3\",\r\n    \"eslint-loader\": \"2.1.1\",\r\n    \"eslint-plugin-flowtype\": \"2.50.1\",\r\n    \"eslint-plugin-import\": \"2.14.0\",\r\n    \"eslint-plugin-jsx-a11y\": \"6.1.1\",\r\n    \"eslint-plugin-react\": \"7.11.1\",\r\n    \"file-loader\": \"2.0.0\",\r\n    \"fs-extra\": \"7.0.0\",\r\n    \"fuse.js\": \"^3.2.1\",\r\n    \"graphql\": \"^14.0.2\",\r\n    \"graphql-tag\": \"^2.5.0\",\r\n    \"html-webpack-plugin\": \"4.0.0-alpha.2\",\r\n    \"identity-obj-proxy\": \"3.0.0\",\r\n    \"jest\": \"23.6.0\",\r\n    \"jest-pnp-resolver\": \"1.0.1\",\r\n    \"jest-resolve\": \"23.6.0\",\r\n    \"jwt-decode\": \"^2.2.0\",\r\n    \"mini-css-extract-plugin\": \"0.4.3\",\r\n    \"mobx\": \"^5.5.0\",\r\n    \"mobx-react\": \"^5.2.8\",\r\n    \"node-sass\": \"^4.9.3\",\r\n    \"npm\": \"^6.4.1\",\r\n    \"optimize-css-assets-webpack-plugin\": \"5.0.1\",\r\n    \"pnp-webpack-plugin\": \"1.1.0\",\r\n    \"postcss-flexbugs-fixes\": \"4.1.0\",\r\n    \"postcss-loader\": \"3.0.0\",\r\n    \"postcss-preset-env\": \"6.0.6\",\r\n    \"postcss-safe-parser\": \"4.0.1\",\r\n    \"react\": \"^16.5.2\",\r\n    \"react-apollo\": \"^1.4.16\",\r\n    \"react-app-polyfill\": \"^0.1.3\",\r\n    \"react-dev-utils\": \"^6.0.3\",\r\n    \"react-dom\": \"^16.5.2\",\r\n    \"react-feather\": \"^1.1.4\",\r\n    \"react-router-dom\": \"^4.3.1\",\r\n    \"react-select\": \"^2.1.0\",\r\n    \"reactstrap\": \"^6.5.0\",\r\n    \"resolve\": \"1.8.1\",\r\n    \"sass-loader\": \"7.1.0\",\r\n    \"start\": \"^5.1.0\",\r\n    \"style-loader\": \"0.23.0\",\r\n    \"styled-components\": \"^3.4.9\",\r\n    \"terser-webpack-plugin\": \"1.1.0\",\r\n    \"url-loader\": \"1.1.1\",\r\n    \"webpack\": \"4.19.1\",\r\n    \"webpack-dev-server\": \"3.1.9\",\r\n    \"webpack-manifest-plugin\": \"2.0.4\",\r\n    \"workbox-webpack-plugin\": \"3.6.2\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node scripts/start.js\",\r\n    \"build\": \"node scripts/build.js\",\r\n    \"test\": \"node scripts/test.js --env=jsdom\"\r\n  },\r\n  \"browserslist\": [\r\n    \">0.2%\",\r\n    \"not dead\",\r\n    \"not ie <= 11\",\r\n    \"not op_mini all\"\r\n  ],\r\n  \"devDependencies\": {},\r\n  \"jest\": {\r\n    \"collectCoverageFrom\": [\r\n      \"src/**/*.{js,jsx}\"\r\n    ],\r\n    \"resolver\": \"jest-pnp-resolver\",\r\n    \"setupFiles\": [\r\n      \"react-app-polyfill/jsdom\"\r\n    ],\r\n    \"testMatch\": [\r\n      \"<rootDir>/src/**/__tests__/**/*.{js,jsx}\",\r\n      \"<rootDir>/src/**/?(*.)(spec|test).{js,jsx}\"\r\n    ],\r\n    \"testEnvironment\": \"jsdom\",\r\n    \"testURL\": \"http://localhost\",\r\n    \"transform\": {\r\n      \"^.+\\\\.(js|jsx)$\": \"<rootDir>/node_modules/babel-jest\",\r\n      \"^.+\\\\.css$\": \"<rootDir>/config/jest/cssTransform.js\",\r\n      \"^(?!.*\\\\.(js|jsx|css|json)$)\": \"<rootDir>/config/jest/fileTransform.js\"\r\n    },\r\n    \"transformIgnorePatterns\": [\r\n      \"[/\\\\\\\\]node_modules[/\\\\\\\\].+\\\\.(js|jsx)$\",\r\n      \"^.+\\\\.module\\\\.(css|sass|scss)$\"\r\n    ],\r\n    \"moduleNameMapper\": {\r\n      \"^react-native$\": \"react-native-web\",\r\n      \"^.+\\\\.module\\\\.(css|sass|scss)$\": \"identity-obj-proxy\"\r\n    },\r\n    \"moduleFileExtensions\": [\r\n      \"web.js\",\r\n      \"js\",\r\n      \"json\",\r\n      \"web.jsx\",\r\n      \"jsx\",\r\n      \"node\"\r\n    ]\r\n  },\r\n  \"babel\": {\r\n    \"presets\": [\r\n      \"react-app\"\r\n    ]\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": \"react-app\"\r\n  }\r\n}\r\n```\r\n\r\nThe app works when I run `yarn start`, however once it gets transpiled into ES2015, it crashes. \r\n\r\nI have not modified anything other than webpackconfig to exclude mjs",
                              "label": "unlabeledBug",
                              "createdAt": "2018-10-25T02:18:02Z",
                              "closedAt": "2018-10-25T02:43:45Z",
                              "lastComment": "2018-10-25T02:50:41Z",
                              "commentCount": 9
                         },
                         {
                              "title": "Upload not working when running on react native android simulator",
                              "description": "I've implemented apollo-upload-client and am using the ReactNativeFile format to upload a file from the app. \r\n\r\nWhen doing this on iOS simulator this works really well without problems. When trying the upload of the image file on android simulator it falls. \r\n\r\nIts really hard to debug this to know what the error is. \r\n\r\nOn Android the URI is a content:// uri and i was thinking if this could be the problem as its not a file:// uri?\r\n\r\nAll the permissions are set properly on the android app and networking to the graphQL server works fine for all other none upload mutations.\r\n\r\nI wonder if you could offer any advice with this?\r\n\r\nThank you.",
                              "label": "unlabeledBug",
                              "createdAt": "2018-08-05T14:44:08Z",
                              "closedAt": "2018-09-27T03:36:18Z",
                              "lastComment": "2022-03-03T23:55:58Z",
                              "commentCount": 19
                         },
                         {
                              "title": "Headers defined in fetchOptions not being sent ",
                              "description": "Continuing from #101 \r\n\r\nUsing cross-fetch as the fetch driver, but the issue is reproducible using browser native fetch.\r\n\r\nSetting headers in fetchOptions doesn't work. When using the following code the `X-CSRF-TOKEN` header is not set (it doesn't show up in the Chrome dev tools under Request Headers):\r\n```js\r\nlet token = document.head.querySelector(\"meta[name=\\\"csrf-token\\\"]\").content;\r\n\r\nlet fetchOptions = {\r\n    credentials: 'same-origin',\r\n    mode: 'same-origin',\r\n    headers: {\r\n        'X-CSRF-TOKEN': token\r\n    }\r\n};\r\n\r\nconst link = createUploadLink({\r\n    uri: document.location.origin + '/graphql',\r\n    fetch,\r\n    fetchOptions\r\n});\r\n```\r\n\r\nCreating the link as show in the example ([link](https://github.com/jaydenseric/apollo-upload-examples/blob/master/app/providers/with-data.js#L18)) also doesn't work:\r\n```js\r\n// Create the apollo client\r\nconst apolloClient = new ApolloClient({\r\n    link: createUploadLink({\r\n        uri: document.location.origin + '/graphql',\r\n    }),\r\n    cache: new InMemoryCache(),\r\n    connectToDevTools: true,\r\n});\r\n```\r\n\r\nThe server does sent `Access-Control-Allow-Headers: X-CSRF-TOKEN`; so that can't be the issue.\r\nOther things that have been tried:\r\n- Settings the credentials to include\r\n- Setting the mode to cors\r\n- Using the native browser fetch (I am developing in the latest version of Chrome)\r\n- Using the Headers constructor and appending in the header keys and values\r\n- Removing `connectToDevTools` from the ApolloClient options\r\n- Removing `cache` from the ApolloClient options",
                              "label": "bug",
                              "createdAt": "2018-07-24T13:06:05Z",
                              "closedAt": "2019-11-18T00:22:33Z",
                              "lastComment": "2019-11-18T00:22:33Z",
                              "commentCount": 6
                         },
                         {
                              "title": "Bug during tests with jest",
                              "description": "Hi,\r\n\r\nI using apollo-upload-client with Angular 6, when i launch tests using jest, i've got this error :\r\n```\r\nReferenceError: fetch is not defined\r\n\r\n> this.link = createUploadLink({ uri });\r\n\r\nat Object.createUploadLink (node_modules/apollo-upload-client/lib/main/index.js:32:41)\r\n```\r\n\r\nWhat could i make to resolve this error ?\r\nThanks",
                              "label": "unlabeledBug",
                              "createdAt": "2018-07-16T20:01:00Z",
                              "closedAt": "2018-07-17T23:44:12Z",
                              "lastComment": "2019-03-04T22:32:52Z",
                              "commentCount": 2
                         },
                         {
                              "title": "[6.0.3] Immutable request operation",
                              "description": "I had a litter issue with `retry-link` & `apollo-upload-client`. After failure, the retry link resubmits the request to Server but not contain any files. I think maybe the operation has been mutable, so files did not contain in the request anymore.\r\n\r\nFix: Need a deep-copy on the `variables`\r\nhttps://github.com/jaydenseric/apollo-upload-client/blob/fc1cd2d57ca3c19f9a4ff7677e38712988df8105/src/index.mjs#L18-L29\r\n\r\nhttps://github.com/jaydenseric/extract-files/blob/2bdf6711c480a25ed8160b4f780471e70544ecf6/src/index.mjs#L39-L55",
                              "label": "unlabeledBug",
                              "createdAt": "2018-03-20T01:57:14Z",
                              "closedAt": "2018-12-20T02:26:22Z",
                              "lastComment": "2018-12-20T02:47:35Z",
                              "commentCount": 7
                         },
                         {
                              "title": "premission denied problem in installtion time. please revert me how to solve this problem.",
                              "description": "[root@localhost Mailspring-master]# npm install babel-core/package.json\r\nnpm ERR! Error while executing:\r\nnpm ERR! /usr/bin/git ls-remote -h -t ssh://git@github.com/babel-core/package.json.git\r\nnpm ERR! \r\nnpm ERR! Permission denied (publickey).\r\nnpm ERR! fatal: Could not read from remote repository.\r\nnpm ERR! \r\nnpm ERR! Please make sure you have the correct access rights\r\nnpm ERR! and the repository exists.\r\nnpm ERR! \r\nnpm ERR! exited with error code: 128\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /root/.npm/_logs/2018-03-19T08_12_41_581Z-debug.log\r\n[root@localhost Mailspring-master]# \r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2018-03-19T08:20:44Z",
                              "closedAt": "2018-03-19T08:22:25Z",
                              "lastComment": "2018-03-19T08:22:25Z",
                              "commentCount": 1
                         },
                         {
                              "title": "Can't import the named export 'ApolloLink' from non EcmaScript module",
                              "description": "After doing following:\r\n\r\n```ts\r\nimport {createUploadLink} from \"apollo-upload-client\";\r\n\r\nexport const GraphqlClient = new ApolloClient({\r\n    link: createUploadLink({ uri: \"http://localhost:3000/graphql\" }),\r\n    cache: new InMemoryCache(),\r\n});\r\n```\r\n\r\nI have these errors when building using webpack:\r\n\r\n```\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n33:13-23 Can't import the named export 'ApolloLink' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n34:14-23 Can't import the named export 'selectURI' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n43:32-56 Can't import the named export 'selectHttpOptionsAndBody' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n45:8-26 Can't import the named export 'fallbackHttpConfig' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n53:18-41 Can't import the named export 'serializeFetchParameter' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n75:15-25 Can't import the named export 'Observable' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n76:34-57 Can't import the named export 'createSignalIfSupported' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n\r\nERROR in ./node_modules/apollo-upload-client/lib/index.mjs\r\n88:14-39 Can't import the named export 'parseAndCheckHttpResponse' from non EcmaScript module (only default export is available)\r\n @ ./node_modules/apollo-upload-client/lib/index.mjs\r\n @ ./src/service/GraphqlClient.js\r\n @ ./src/component/AppComponent.js\r\n @ ./src/index.js\r\n```\r\n\r\nDo you have any ideas in mind why I have following errors?\r\n",
                              "label": "bug",
                              "createdAt": "2018-03-02T14:00:50Z",
                              "closedAt": "2018-03-08T02:03:40Z",
                              "lastComment": "2018-03-08T01:43:50Z",
                              "commentCount": 12
                         },
                         {
                              "title": "AbortController TypeError.",
                              "description": "Hi,\r\nI was getting the following error when trying to use this uploadLink with my apollo client:\r\n`TypeError: 'abort' called on an object that does not implement interface AbortController.`\r\n\r\nHere is my apollo client code:\r\n```\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createUploadLink } from './apollo-upload-link';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { persistCache } from 'apollo-cache-persist';\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from session storage if it exists\r\n  const token = window.sessionStorage.getItem('token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? token : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: `${process.env.REACT_APP_BACKEND_URL}/graphql`,\r\n});\r\n\r\n// Custom InMemoryCache to remove __typename from 'id' variables, because I\r\n// already do this server side.\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: o => o.id || null,\r\n});\r\n\r\npersistCache({\r\n  cache,\r\n  storage: sessionStorage,\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // By default, this client will send queries to the\r\n  //  `/graphql` endpoint on the same host\r\n  link: authLink.concat(uploadLink),\r\n  cache,\r\n});\r\n\r\nexport default client;\r\n```\r\n\r\nI fixed the error by merging code from [apollo-link-http](https://github.com/apollographql/apollo-link/blob/master/packages/apollo-link-http/src/httpLink.ts) with the code from `apollo-upload-client`. Here's what I got:\r\n\r\n```\r\nimport { ApolloLink, Observable, fromError } from 'apollo-link';\r\nimport {\r\n  serializeFetchParameter,\r\n  selectURI,\r\n  parseAndCheckHttpResponse,\r\n  checkFetcher,\r\n  selectHttpOptionsAndBody,\r\n  createSignalIfSupported,\r\n  fallbackHttpConfig,\r\n  UriFunction as _UriFunction,\r\n} from 'apollo-link-http-common';\r\nimport extractFiles from 'extract-files';\r\n\r\nexport { ReactNativeFile } from 'extract-files';\r\n\r\nexport const createUploadLink = (linkOptions = {}) => {\r\n  let {\r\n    uri: fetchUri = '/graphql',\r\n    // use default global fetch if nothing passed in\r\n    credentials,\r\n    fetch: fetcher,\r\n    fetchOptions,\r\n    headers,\r\n    includeExtensions,\r\n    useGETForQueries,\r\n  } = linkOptions;\r\n\r\n  // dev warnings to ensure fetch is present\r\n  checkFetcher(fetcher);\r\n\r\n  // fetcher is set here rather than the destructuring to ensure fetch is\r\n  // declared before referencing it. Reference in the destructuring would cause a\r\n  // ReferenceError\r\n  if (!fetcher) {\r\n    fetcher = fetch;\r\n  }\r\n\r\n  const linkConfig = {\r\n    http: { includeExtensions },\r\n    options: fetchOptions,\r\n    credentials,\r\n    headers,\r\n  };\r\n\r\n  return new ApolloLink(operation => {\r\n    let chosenURI = selectURI(operation, fetchUri);\r\n\r\n    const context = operation.getContext();\r\n\r\n    const contextConfig = {\r\n      http: context.http,\r\n      options: context.fetchOptions,\r\n      credentials: context.credentials,\r\n      headers: context.headers,\r\n    };\r\n\r\n    // uses fallback, link, and then context to build options\r\n    const { options, body } = selectHttpOptionsAndBody(\r\n      operation,\r\n      fallbackHttpConfig,\r\n      linkConfig,\r\n      contextConfig,\r\n    );\r\n\r\n    const { controller, signal } = createSignalIfSupported();\r\n    if (controller) options.signal = signal;\r\n\r\n    // If requested, set method to GET if there are no mutations.\r\n    const definitionIsMutation = d => {\r\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\r\n    };\r\n    if (\r\n      useGETForQueries &&\r\n      !operation.query.definitions.some(definitionIsMutation)\r\n    ) {\r\n      options.method = 'GET';\r\n    }\r\n\r\n    if (options.method === 'GET') {\r\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\r\n      if (parseError) {\r\n        return fromError(parseError);\r\n      }\r\n      chosenURI = newURI;\r\n    } else {\r\n      try {\r\n        options.body = serializeFetchParameter(body, 'Payload');\r\n      } catch (parseError) {\r\n        return fromError(parseError);\r\n      }\r\n    }\r\n\r\n    const files = extractFiles(body);\r\n\r\n    // If we are sending files in the body of the request\r\n    if (files.length !== 0) {\r\n      // Automatically set by fetch when the body is a FormData instance.\r\n      delete options.headers['content-type'];\r\n\r\n      // GraphQL multipart request spec:\r\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\r\n      options.body = new FormData();\r\n      options.body.append('operations', serializeFetchParameter(body));\r\n      options.body.append(\r\n        'map',\r\n        JSON.stringify(\r\n          files.reduce((map, { path }, index) => {\r\n            map[`${index}`] = [path];\r\n            return map;\r\n          }, {}),\r\n        ),\r\n      );\r\n      files.forEach(({ file }, index) =>\r\n        options.body.append(index, file, file.name),\r\n      );\r\n    } else options.body = serializeFetchParameter(body);\r\n\r\n    return new Observable(observer => {\r\n      fetcher(chosenURI, options)\r\n        .then(response => {\r\n          // Forward the response on the context.\r\n          operation.setContext({ response });\r\n          return response;\r\n        })\r\n        .then(parseAndCheckHttpResponse(operation))\r\n        .then(result => {\r\n          observer.next(result);\r\n          observer.complete();\r\n          return result;\r\n        })\r\n        .catch(err => {\r\n          // fetch was cancelled so its already been cleaned up in the\r\n          // unsubscribe\r\n          if (err.name === 'AbortError') return;\r\n          // if it is a network error, BUT there is graphql result info\r\n          // fire the next observer before calling error\r\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and\r\n          // `networkErrors` to pass to UI\r\n          if (err.result && err.result.errors)\r\n            // if we dont' call next, the UI can only show networkError because AC didn't\r\n            // get andy graphqlErrors\r\n            // this is graphql execution result info (i.e errors and possibly data)\r\n            // this is because there is no formal spec how errors should translate to\r\n            // http status codes. So an auth error (401) could have both data\r\n            // from a public field, errors from a private field, and a status of 401\r\n            // {\r\n            //  user { // this will have errors\r\n            //    firstName\r\n            //  }\r\n            //  products { // this is public so will have data\r\n            //    cost\r\n            //  }\r\n            // }\r\n            //\r\n            // the result of above *could* look like this:\r\n            // {\r\n            //   data: { products: [{ cost: \"$10\" }] },\r\n            //   errors: [{\r\n            //      message: 'your session has timed out',\r\n            //      path: []\r\n            //   }]\r\n            // }\r\n            // status code of above would be a 401\r\n            // in the UI you want to show data where you can, errors as data where you can\r\n            // and use correct http status codes\r\n            observer.next(err.result);\r\n\r\n          observer.error(err);\r\n        });\r\n\r\n      return () => {\r\n        // Abort fetch as the optional cleanup function.\r\n        if (controller) return controller.abort;\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\n// For GET operations, returns the given URI rewritten with parameters, or a\r\n// parse error.\r\nfunction rewriteURIForGET(chosenURI, body) {\r\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\r\n  // the extra level of JSON serialization!\r\n  const queryParams = [];\r\n  const addQueryParam = (key, value) => {\r\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\r\n  };\r\n\r\n  if ('query' in body) {\r\n    addQueryParam('query', body.query);\r\n  }\r\n  if (body.operationName) {\r\n    addQueryParam('operationName', body.operationName);\r\n  }\r\n  if (body.variables) {\r\n    let serializedVariables;\r\n    try {\r\n      serializedVariables = serializeFetchParameter(\r\n        body.variables,\r\n        'Variables map',\r\n      );\r\n    } catch (parseError) {\r\n      return { parseError };\r\n    }\r\n    addQueryParam('variables', serializedVariables);\r\n  }\r\n  if (body.extensions) {\r\n    let serializedExtensions;\r\n    try {\r\n      serializedExtensions = serializeFetchParameter(\r\n        body.extensions,\r\n        'Extensions map',\r\n      );\r\n    } catch (parseError) {\r\n      return { parseError };\r\n    }\r\n    addQueryParam('extensions', serializedExtensions);\r\n  }\r\n\r\n  // Reconstruct the URI with added query params.\r\n  // XXX This assumes that the URI is well-formed and that it doesn't\r\n  //     already contain any of these query params. We could instead use the\r\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\r\n  //     don't support URLSearchParams. Note that some browsers (and\r\n  //     versions of whatwg-url) support URL but not URLSearchParams!\r\n  let fragment = '',\r\n    preFragment = chosenURI;\r\n  const fragmentStart = chosenURI.indexOf('#');\r\n  if (fragmentStart !== -1) {\r\n    fragment = chosenURI.substr(fragmentStart);\r\n    preFragment = chosenURI.substr(0, fragmentStart);\r\n  }\r\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\r\n  const newURI =\r\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\r\n  return { newURI };\r\n}\r\n\r\nexport class UploadLink extends ApolloLink {\r\n  requester;\r\n  constructor(opts) {\r\n    super(createUploadLink(opts).request);\r\n  }\r\n}\r\n```\r\n\r\nMost of the changes probably aren't needed, but it's working and I don't want to mess with it at the moment. The key changes - I think - are the following: \r\n```\r\nreturn () => {\r\n  // Abort fetch as the optional cleanup function.\r\n  if (controller) return controller.abort;\r\n};\r\n```\r\nIt wasn't returning a function before, now it is.\r\n```\r\nconst { controller, signal } = createSignalIfSupported();\r\nif (controller) options.signal = signal;\r\n```\r\nI moved this out of the Observable.\r\n\r\nI haven't done any formal testing, but it's working for me know. Just thought I'd let you know. :+1: ",
                              "label": "bug",
                              "createdAt": "2018-02-22T22:05:54Z",
                              "closedAt": "2018-02-23T01:28:22Z",
                              "lastComment": "2018-02-23T12:26:28Z",
                              "commentCount": 3
                         },
                         {
                              "title": "TypeError: (0 , _extractFiles.extractFiles) when using with create-react-app and Typescript",
                              "description": "Hi, I got the folowing error when I try to use `apollo-upload-client` with `create-react-app` and `Typescript`:\r\n\r\n`TypeError: (0 , _extractFiles.extractFiles) is not a function`\r\n\r\nMy package verions: \r\n```\r\n        \"apollo-cache-inmemory\": \"^1.1.5\",\r\n        \"apollo-client\": \"^2.2.0\",\r\n        \"apollo-link\": \"^1.0.7\",\r\n        \"apollo-link-context\": \"^1.0.3\",\r\n        \"apollo-link-error\": \"^1.0.3\",\r\n        \"apollo-link-http\": \"^1.3.2\",\r\n        \"apollo-upload-client\": \"^7.0.0-alpha.3\",\r\n        \"react\": \"^16.0.0\",\r\n        \"react-apollo\": \"^2.0.4\",\r\n        \"react-dev-utils\": \"^4.1.0\",\r\n        \"react-dom\": \"^16.0.0\",\r\n        \"typescript\": \"^2.6.2\",\r\n\r\n```\r\n\r\nAnd here is my setup:\r\n```\r\nimport { createUploadLink } from 'apollo-upload-client/lib';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { onError } from 'apollo-link-error';\r\n\r\nconst errorLink = onError(({ networkError, graphQLErrors }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, path }) =>\r\n      debug(\r\n        `[GraphQL error]: Message: ${message}, Location:`,\r\n        locations,\r\n        `Path: ${path}`\r\n      )\r\n    );\r\n  }\r\n\r\n  if (networkError) {\r\n    debug(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst link = createUploadLink({\r\n  uri: '/graphql',\r\n  credentials:\r\n    process.env.NODE_ENV === 'development' ? 'include' : 'same-origin',\r\n  headers: {\r\n    authorization: localStorage.getItem(TOKEN)\r\n      ? `Bearer ${localStorage.getItem(TOKEN)}`\r\n      : null\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: errorLink.concat(link)\r\n});\r\n```",
                              "label": "unlabeledBug",
                              "createdAt": "2018-01-18T10:43:10Z",
                              "closedAt": "2018-01-18T14:33:49Z",
                              "lastComment": "2018-10-15T12:55:30Z",
                              "commentCount": 9
                         },
                         {
                              "title": "Files created with the window.File constructor upload empty in Safari",
                              "description": "This is a fun issue! Mostly because I can't seem to pinpoint where the issue exactly lies! 😄 \r\n\r\n### Scenario\r\nI use the apollo-upload-client together with the apollo-upload-server in my React project to upload images to my server. I use some simple client-side image compression to reduce the size of the file to upload to speed up the upload process (greatly outweighs the time required to compress the image + lowers data usage).\r\n\r\nIn Chrome and Firefox the upload works like a charm with compressed images. 👍 \r\n\r\n### Problem\r\nIn Safari my client doesn't correctly upload the compressed image: the Upload promise on the server resolves to a FileStream with a length of 0. 👎 My Request Headers **Content-Length** is way to small to include the image, so it's simply not being sent, though **no errors** are being thrown. I do get the metadata of the image (filename, mime type etc.) on the server so the request is correctly being sent, it just doesn't contain the image data.\r\n\r\n### Expected behaviour\r\nThe image would correctly be sent OR an error would be thrown telling me if something's wrong.\r\n\r\n### Root of problem\r\nThe obvious issue is that I'm breaking my image during compression. However, when I `console.log(URL.createObjectURL(myImage))` and copy/paste that string in an `<img>` tag on the page, it renders correctly and when logging the file itself to the console, I see nothing out of the ordinary either. I can even download and base64 the `File` and open it in an external service without any issues.\r\n\r\nIt seems to me that the `File` is, in fact, a valid `File`. Apollo-upload-client doesn't agree with me on this one though.\r\n\r\n### Code\r\n[The file compression can be seen here at CodeSandbox](https://codesandbox.io/embed/3xjn0oqvk6). It doesn't work for some reason inside CodeSandbox, but can be copy/pasted to local and runs without issues there.\r\n\r\nIt seems a bit overkill to re-create the rest of the project structure inside CodeSandbox because it's so big and unrelated (as proven by the small request content-length). The code is hosted on a private repo which I'm not allowed to share. FWIW, the server follows https://github.com/jaydenseric/apollo-upload-examples/tree/master/api (only difference is that I use express). After compressing the image, it's sent directly using the `mutate` prop passed by the GraphQL HoC, no further adjustments are made to it.\r\n\r\n### Question\r\nI'm not very familiar with the apollo-upload-client, but if someone could give me some pointers in how I can further debug this myself, I'd be glad to do so! Maybe the `File` needs to meet certain conditions I'm unaware of? It currently has a name, content, type and lastModified. IMO an error should at least be thrown when a File should, but couldn't, be uploaded.",
                              "label": "unlabeledBug",
                              "createdAt": "2018-01-13T11:06:50Z",
                              "closedAt": "2018-01-15T10:46:19Z",
                              "lastComment": "2018-01-15T12:18:55Z",
                              "commentCount": 9
                         },
                         {
                              "title": "uri must be a string",
                              "description": "After upgrading to version 5.0 I got an runtime error: \"uri must be a string\".\r\nI can see in debugger that apollo client got object with uri, opts and batchInterval (instead of just uri string). There was no such error in version 4.0.3.\r\nWhat I did wrong?\r\nThank you!",
                              "label": "unlabeledBug",
                              "createdAt": "2017-07-03T07:38:15Z",
                              "closedAt": "2017-07-03T08:33:43Z",
                              "lastComment": "2017-07-03T08:33:43Z",
                              "commentCount": 3
                         },
                         {
                              "title": "React Native & `babel-preset-env`",
                              "description": "Trying this out with RN and got the error:\r\n\r\n> Couldn't find preset \"env\" relative to directory\r\n\r\nInstalling `babel-preset-env` fixes it but it seems like this should have been installed as a dependency and shouldn't be necessary for RN anyway?",
                              "label": "unlabeledBug",
                              "createdAt": "2017-06-24T09:03:45Z",
                              "closedAt": "2017-06-24T09:07:11Z",
                              "lastComment": "2017-06-24T09:08:13Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Fix error introduced by apollo-client@1.5.0",
                              "description": "Updating `apollo-client` from v1.4.2 to v1.5.0 causes the error `A remote endpoint is required for a network layer` if you use query batching, due to an API change.\r\n\r\nSee https://github.com/apollographql/apollo-client/pull/1659#issuecomment-310583945.",
                              "label": "bug",
                              "createdAt": "2017-06-23T06:47:23Z",
                              "closedAt": "2017-06-23T07:59:47Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "null is not an object (evaluating 'Object.keys(node)')",
                              "description": "This happen when pass a `null` value for the variable. Add check null at here \r\n\r\nhttps://github.com/jaydenseric/apollo-upload-client/blob/master/src/helpers.js#L16",
                              "label": "bug",
                              "createdAt": "2017-06-20T15:45:49Z",
                              "closedAt": "2017-06-21T01:51:44Z",
                              "lastComment": "2017-06-21T01:55:02Z",
                              "commentCount": 6
                         },
                         {
                              "title": "Old browser transpilation error",
                              "description": "The recursive iterator [here](https://github.com/jaydenseric/apollo-upload-client/blob/v4.0.4/src/helpers.js#L17) does not make IE 11 happy.\r\n\r\nWe don't really need the full power of [nervgh/recursive-iterator](https://github.com/nervgh/recursive-iterator), so by writing our own recursion we could strip a few KB from an `apollo-upload-client` install.",
                              "label": "bug",
                              "createdAt": "2017-06-20T03:26:21Z",
                              "closedAt": "2017-06-20T12:27:13Z",
                              "lastComment": "2017-06-20T12:27:13Z",
                              "commentCount": 1
                         },
                         {
                              "title": "Network error: Cannot read property 'headers' of undefined",
                              "description": "On upgrading from 3.0.3 to 4.0.0 I get the following error:\r\n\r\n```\r\nNetwork error: Cannot read property 'headers' of undefined\r\n  at new ApolloError ([...]/node_modules/apollo-client/apollo.umd.js:1851:28)\r\n```\r\n\r\nI think it should be passing `options` through to `window.fetch` as well as `opts`?",
                              "label": "bug",
                              "createdAt": "2017-04-23T00:29:28Z",
                              "closedAt": "2017-04-25T05:29:02Z",
                              "lastComment": "2017-04-25T23:21:45Z",
                              "commentCount": 7
                         },
                         {
                              "title": "Side Effects in extractRequestFiles",
                              "description": "Hi! \r\n\r\nWhen trying to get the lastest version of this client to work, I stumbled upon the following error. \r\n\r\nIn https://github.com/jaydenseric/apollo-upload-client/blob/master/src/helpers.js#L47 the query object is overwritten with a string. For the fallback case (no files found) that means ApolloClient will throw an `Invalid AST` error, as the query is now a string. I suppose this is probably not the intended behaviour? 😄 ",
                              "label": "bug",
                              "createdAt": "2017-04-07T09:24:24Z",
                              "closedAt": "2017-04-09T04:31:03Z",
                              "lastComment": "2017-04-09T04:38:42Z",
                              "commentCount": 6
                         },
                         {
                              "title": "Error: Network error: window is not defined",
                              "description": "Hi Jay,\r\n\r\nI'm pretty sure this is an error on my end, but if you have any advice I would love to hear it. I'm using next.js with apollo-client and getting 'window is not defined' when I switch to the new createNetworkInterface.\r\n\r\n`\r\n{ Error: Network error: window is not defined\r\n    at new ApolloError (/Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/errors/ApolloError.js:32:28)\r\n    at /Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/core/QueryManager.js:260:41\r\n    at /Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/core/QueryManager.js:683:25\r\n    at Array.forEach (native)\r\n    at /Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/core/QueryManager.js:680:27\r\n    at Array.forEach (native)\r\n    at QueryManager.broadcastQueries (/Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/core/QueryManager.js:677:42)\r\n    at Array.<anonymous> (/Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/core/QueryManager.js:63:23)\r\n    at dispatch (/Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/redux/lib/createStore.js:186:19)\r\n    at /Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/ApolloClient.js:174:30\r\n  graphQLErrors: [],\r\n  networkError: \r\n   ReferenceError: window is not defined\r\n       at HTTPUploadNetworkInterface.fetchFromRemoteEndpoint (/Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-upload-client/src/network-interface.js:6:26)\r\n       at /Users/michaelmerrill/code/src/github.com/michaelmerrill/snapflix-client/node_modules/apollo-client/src/transport/networkInterface.js:108:71,\r\n  message: 'Network error: window is not defined',\r\n  extraInfo: undefined,\r\n  queryErrors: [ [Circular] ] }\r\n`",
                              "label": "bug",
                              "createdAt": "2017-03-31T23:19:53Z",
                              "closedAt": "2017-04-05T04:42:38Z",
                              "lastComment": "2017-04-05T04:46:54Z",
                              "commentCount": 3
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 17,
                    "total_commits": 129,
                    "bug_commits": [
                         {
                              "message": "Fix function `createUploadLink` option `fetchOptions.signal` bugs.",
                              "created_at": "2021-05-13T09:37:49Z",
                              "sha": "bf59e08c33930552a0fc76e848d234bc95103469"
                         },
                         {
                              "message": "Merge branch 'master' into andreialecu/fix-peer\n\n# Conflicts:\n#\tpackage.json",
                              "created_at": "2021-05-11T00:08:32Z",
                              "sha": "f437752f7e8403f99deb1eb897e3583a80040e01"
                         },
                         {
                              "message": "Update dependencies.\n\nAlso, fix new Prettier lint errors.",
                              "created_at": "2020-09-10T01:11:02Z",
                              "sha": "4c72c995756c3cc6db4b523f9c8a3158a42e9970"
                         },
                         {
                              "message": "Update formdata-node and remove workarounds.\n\nThe formdata-node bug has been fixed: https://github.com/octet-stream/form-data/issues/22 .",
                              "created_at": "2020-07-22T11:50:35Z",
                              "sha": "5a7404ce17da6a1e802c7616366531247e372179"
                         },
                         {
                              "message": "Add tests, refactor code and fix bugs.\n\nFixes https://github.com/jaydenseric/apollo-upload-client/issues/204 and fixes https://github.com/jaydenseric/apollo-upload-client/issues/209 .",
                              "created_at": "2020-07-22T07:06:05Z",
                              "sha": "302051fd04d9854fa04f985ab94e99b91a425e92"
                         },
                         {
                              "message": "Merge pull request #175 from hoangvvo/apollo-client-v3\n\nSupport Apollo Client v3, fixes https://github.com/jaydenseric/apollo-upload-client/issues/174 .",
                              "created_at": "2020-07-15T06:12:10Z",
                              "sha": "5f6df83fdc52517f77625d9e540cc1d600008a52"
                         },
                         {
                              "message": "Documentation tweaks and fixes.",
                              "created_at": "2020-07-15T04:10:34Z",
                              "sha": "2bdd2a4e6cac18eea56fe877535d5189e09a2014"
                         },
                         {
                              "message": "Update dependencies.\n\nIncludes prettier v2 lint fixes.",
                              "created_at": "2020-03-30T02:21:24Z",
                              "sha": "429f5e02105def7034f452deaf6bb47b5a8d5568"
                         },
                         {
                              "message": "Merge pull request #169 from gogiel/support-signal\n\nOnly create a default AbortController instance if signal is not already set in fetch options; fixes https://github.com/jaydenseric/apollo-upload-client/issues/162 .",
                              "created_at": "2019-12-02T05:45:04Z",
                              "sha": "87ed8df227c468ee3b7f621d86e874554929cd72"
                         },
                         {
                              "message": "Update to extract-files v5.\n\n- The original operation object is no longer modified when it contains files, fixes https://github.com/jaydenseric/apollo-upload-client/issues/81 .\n- If the same file is used in multiple locations of an operation it is only uploaded once.",
                              "created_at": "2018-12-20T02:26:10Z",
                              "sha": "906f4895066dd8da458430d95838f3721f7d3700"
                         },
                         {
                              "message": "Prettier fixes.",
                              "created_at": "2018-06-24T01:06:54Z",
                              "sha": "d0cc9e7038b9d9ab427352016aac9f18a29160a0"
                         },
                         {
                              "message": "Comment fixes.",
                              "created_at": "2017-06-24T10:24:42Z",
                              "sha": "98abe0197297a0d9bae69e5e44210e0ac3df0a7b"
                         },
                         {
                              "message": "Misc. fixes.",
                              "created_at": "2017-06-24T07:17:51Z",
                              "sha": "da860020c7296035302820922a7641a2386e8abf"
                         },
                         {
                              "message": "Source comment typo fix.",
                              "created_at": "2017-06-20T13:24:31Z",
                              "sha": "8d4377525a6dce0cdc4b881b4018da7b32e532f5"
                         },
                         {
                              "message": "Batch network interface bugfix.\n\nThe batch network interface always thought there were files to upload, preventing the use of the fallback vanilla Apollo transport method when there are none.",
                              "created_at": "2017-04-25T05:28:53Z",
                              "sha": "ae1bcdb86db96f0ea72a4b09248806e660709072"
                         },
                         {
                              "message": "Merge pull request #7 from AdamYee/fix-network-options\n\nFixed the API for configuring fetch options.",
                              "created_at": "2017-04-20T04:06:01Z",
                              "sha": "0cf6e904a08b69a8b4f82685c8151ad6e93bef04"
                         },
                         {
                              "message": "Better transpilation with babel-runtime.\n\nShould fix IE 11 issues.",
                              "created_at": "2017-03-26T13:50:27Z",
                              "sha": "785782396c5ffe1e8ae560ec165cddb9e96cc858"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 3,
                    "promise": 3,
                    "async": 4
               }
          },
          {
               "index": 3,
               "repoFullName": "nicolas-van/modern-async",
               "creationDate": "2020-11-12",
               "languages": {
                    "JavaScript": 197550,
                    "HTML": 231
               },
               "stars": 159,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 1,
                    "total_issues": 5,
                    "issues": [
                         {
                              "title": "forEachLimit is ignoring the concurrent paramter",
                              "description": "See this Code:\r\n\r\n```js\r\n//@ts-ignore\r\nvar {forEachLimit}=require('modern-async')\r\n\r\nvar ar=[]\r\nfor(let i=0;i<=100;i++) ar.push(i)\r\n\r\nforEachLimit(ar,async item=>{\r\n  await delay(1000)\r\n  console.log(item)\r\n},5)\r\nfunction delay(ms){return new Promise(resolve=>setTimeout(resolve,ms))}\r\n```\r\n\r\nIt should show every 1 seconds 5 items. But it shows after 1 second all the items.\r\nI found the bug and I wanted to fix it:\r\n\r\nIn the file forEachLimit.js:\r\n\r\n```js\r\nasync function forEachLimit (iterable, iteratee, concurrency) {\r\n  await mapLimit(iterable, async (v, i, t) => {\r\n    iteratee(v, i, t)\r\n  }, concurrency)\r\n}\r\n```\r\n\r\nmissing await before ```iteratee(v, i ,t)```\r\n\r\nI wanted to fix it but the current version in GitHub is different (in development).\r\nCan you provide hotfix and publish it to NPM as 1.0.4?\r\nIt's really a security issue for servers to handle too many requests at the same time.\r\n\r\nBy the way, thank you for you awesome library.",
                              "label": "bug",
                              "createdAt": "2021-10-20T05:17:12Z",
                              "closedAt": "2021-10-20T08:01:49Z",
                              "lastComment": "2021-10-20T08:08:42Z",
                              "commentCount": 1
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 6,
                    "total_commits": 95,
                    "bug_commits": [
                         {
                              "message": "fixed problem with version switcher",
                              "created_at": "2020-12-15T18:37:32Z",
                              "sha": "43b01906f899b720d002379d0c6280f5f0459882"
                         },
                         {
                              "message": "Added test using puppeteer and fixed Scheduler test",
                              "created_at": "2020-12-14T19:15:59Z",
                              "sha": "7c9fb7e352ef4a06bba56a9ee0f95c0072f94fbb"
                         },
                         {
                              "message": "fix tests in node 10",
                              "created_at": "2020-11-26T22:33:29Z",
                              "sha": "f345134b0835575b596ac0290d7ba8e9d88dab9b"
                         },
                         {
                              "message": "fixed doc",
                              "created_at": "2020-11-26T21:00:52Z",
                              "sha": "88b6e9bc77b399f8ee166b88af3a85e05a3f490c"
                         },
                         {
                              "message": "fixed coverage",
                              "created_at": "2020-11-26T20:12:05Z",
                              "sha": "a9784672eb1025e779a6accd1b0f9568566e9e17"
                         },
                         {
                              "message": "fix test",
                              "created_at": "2020-11-26T18:56:43Z",
                              "sha": "8bdfdbdcd62e2ceae7821705ee90d249ec3d234e"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 0,
                    "promise": 74,
                    "async": 92
               }
          },
          {
               "index": 4,
               "repoFullName": "tkh44/holen",
               "creationDate": "2017-05-03",
               "languages": {
                    "JavaScript": 8084
               },
               "stars": 150,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 1,
                    "total_issues": 5,
                    "issues": [
                         {
                              "title": "Holen's isomorphic-unfetch collide with application's isomorphic-unfetch",
                              "description": "I'm developing an isomorphic app with Next.js and React.js. \r\nI have isomorphic-unfetch imported globally like this \r\n\r\n```\r\nimport \"isomorphic-unfetch`;\r\n```\r\n\r\nin every page.\r\n\r\nWhen I import Holen to a page (any page), it will throw an error say that `fetch is undefined` even on browser that have native fetch. \r\n\r\nRemoving the import either in Holen's code or in my application's code will \"fix\" the error.\r\n\r\nSo I think that Holen should require user to have fetch polyfill globally available instead of importing the polyfill directly.\r\n\r\nThoughts?\r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2017-07-16T12:17:45Z",
                              "closedAt": "2018-01-22T18:57:22Z",
                              "lastComment": "2017-07-19T14:47:17Z",
                              "commentCount": 1
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 2,
                    "total_commits": 25,
                    "bug_commits": [
                         {
                              "message": "Increase coverage and fix response error bug",
                              "created_at": "2017-05-06T01:34:13Z",
                              "sha": "87a4f811947b22b3b80c377b176f18f347d3a7a0"
                         },
                         {
                              "message": ":goberserk:\nConvert to jest\nAdd tests\nFix bugs",
                              "created_at": "2017-05-04T22:08:35Z",
                              "sha": "9f3251d09ca334258e010c721ec01f339534231a"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 2,
                    "promise": 0,
                    "async": 0
               }
          },
          {
               "index": 5,
               "repoFullName": "d3/d3-require",
               "creationDate": "2017-05-04",
               "languages": {
                    "JavaScript": 13281,
                    "HTML": 1549
               },
               "stars": 71,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 1,
                    "total_issues": 16,
                    "issues": [
                         {
                              "title": "requireFrom pollutes the module cache.",
                              "description": "Say you have a module *foo* that depends on *bar*. If you\r\n\r\n```js\r\nrequire(\"foo\")\r\n```\r\n\r\nAnd then you\r\n\r\n```js\r\nrequire.alias({bar: 42})(\"foo\")\r\n```\r\n\r\nIt won’t give you a new module *foo* whose value of *bar* is 42; it’ll return the previously-loaded module *foo* with its natural dependency on *bar* because *foo* is already in the modules cache.\r\n\r\nThis was broken by a6859e9 to fix #8. But this was misguided—even though *foo* resolves to the same URL in both cases above, the returned module should be different because its dependencies (*bar*) are different. Possibly we could be clever and try to include the transitive closure of dependencies in the cache key, but it’s much simpler to just have each requireFrom use separate caches.",
                              "label": "unlabeledBug",
                              "createdAt": "2018-08-15T15:38:50Z",
                              "closedAt": "2018-08-15T15:45:50Z",
                              "lastComment": "",
                              "commentCount": 0
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 1,
                    "total_commits": 54,
                    "bug_commits": [
                         {
                              "message": "resolveFrom (#43)\n\n* add resolveFrom\r\n\r\n* fix #34; no extension if trailing slash\r\n\r\n* add tests for resolveFrom\r\n\r\n* add GitHub Actions\r\n\r\n* fix rollup config\r\n\r\n* fix test\r\n\r\n* test resolve",
                              "created_at": "2022-06-02T22:48:14Z",
                              "sha": "d2c3a579b40e90a83e633843324c47a0bc912003"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 0,
                    "promise": 1,
                    "async": 3
               }
          },
          {
               "index": 6,
               "repoFullName": "e6Hub/app",
               "creationDate": "2019-11-20",
               "languages": {
                    "Vue": 74367,
                    "JavaScript": 39972,
                    "CSS": 4009,
                    "HTML": 368
               },
               "stars": 30,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 3,
                    "total_issues": 3,
                    "issues": [
                         {
                              "title": "[Bug] Can't download posts",
                              "description": "**What is the bug?**\r\nI was trying to download some posts, but for some reason they are not downloading. I can't check Dev Tools as much as I try.\r\n\r\n**Steps to reproduce that**\r\n1. Search a post.\r\n2. Click the post's view.\r\n3. Click the \"Download\" button.\r\n4. If you go to \"Downloads\", the post will not download and it will get stuck at 0%.\r\n\r\n**Machine info**\r\n* OS: Windows 8.1 on 64 bits.\r\n* App version: 3.7.0.\r\n![Screenshot_1](https://user-images.githubusercontent.com/47114174/106368952-dc9f6f80-634d-11eb-9c96-509849d15f4a.png)\r\n\r\n",
                              "label": "bug",
                              "createdAt": "2021-01-30T21:53:21Z",
                              "closedAt": "2021-02-04T13:59:40Z",
                              "lastComment": "2021-02-04T13:59:40Z",
                              "commentCount": 1
                         },
                         {
                              "title": "[Bug] (Gtk-WARNING cannot open display)",
                              "description": "**What is the bug?**\r\nWhen i try to run the dev build i tells me (electron:21925): Gtk-WARNING **: 20:36:20.409: cannot open display: \r\n\r\n**Steps to reproduce that**\r\n1.Run Dev on Arch Linux\r\n2. Wait\r\n3. ???\r\n4. Profit\r\n\r\n**Machine info**\r\n* OS Manjaro\r\n\r\n",
                              "label": "bug",
                              "createdAt": "2020-11-07T19:39:32Z",
                              "closedAt": "2020-11-08T09:15:19Z",
                              "lastComment": "2020-11-08T09:15:19Z",
                              "commentCount": 2
                         },
                         {
                              "title": "[Bug] Does not work on Windows 10 17763",
                              "description": "**What is the bug?**\r\nRelease version does not work. Nothing in the logs after start-up, but 30% of the CPU is consumed all the time.\r\n\r\n**Steps to reproduce that**\r\n1. Download this release - https://github.com/e6Hub/app/releases/download/v3.2.0/e6Hub-Setup-3.2.0.exe\r\n2. Install it\r\n3. Run it\r\n\r\n**Machine info**\r\n* OS: Windows 10 (10.0.17763)\r\n* App version: 3.2.0 a9286d5cf840dc861a352a447adf210b8024c39b\r\n\r\n![mintty_q724wOXcA4](https://user-images.githubusercontent.com/44648612/71420145-8e319300-26ae-11ea-94f5-1a0ab517b27f.png)\r\n\r\n",
                              "label": "bug",
                              "createdAt": "2019-12-24T16:37:33Z",
                              "closedAt": "2019-12-27T04:47:48Z",
                              "lastComment": "2019-12-27T04:47:48Z",
                              "commentCount": 4
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 27,
                    "total_commits": 106,
                    "bug_commits": [
                         {
                              "message": "add safe mode and minor fixes",
                              "created_at": "2021-01-05T15:19:20Z",
                              "sha": "5b7ec48065626cc32f6f65590cfa21d4146ddb17"
                         },
                         {
                              "message": "minor fix at downloads page",
                              "created_at": "2021-01-05T14:28:04Z",
                              "sha": "03e61c596d2411c3cf2017a13ce55461c1ac5932"
                         },
                         {
                              "message": "fix Downloads setting, make settings reactive",
                              "created_at": "2020-11-26T15:20:30Z",
                              "sha": "9132a460ec929d9c9f31b8ca1880ee8e82eae6dd"
                         },
                         {
                              "message": "PoolView: fix post listing",
                              "created_at": "2020-11-26T15:00:06Z",
                              "sha": "baf31fa564a48a921a6b8831e9f21c33eabc4e8e"
                         },
                         {
                              "message": "Downloads: fix repeated downloads",
                              "created_at": "2020-11-26T14:27:08Z",
                              "sha": "1c067154e09d25621f4f6b4a2a1bdaa08795c0fb"
                         },
                         {
                              "message": "fix pagination for search endpoints",
                              "created_at": "2020-11-20T18:27:35Z",
                              "sha": "0cc8d40712e74a592ffd21019ddb3c6c42361f8a"
                         },
                         {
                              "message": "fix text color for titles",
                              "created_at": "2020-11-18T17:31:11Z",
                              "sha": "6fc14fdf645bc650af52e62df750b934ca353948"
                         },
                         {
                              "message": "fix \"download listed posts\" button",
                              "created_at": "2020-11-09T04:13:48Z",
                              "sha": "74fc3130f5c852981b86ae74f5fc4e5643bc9191"
                         },
                         {
                              "message": "fixes for post items, added blacklist notice",
                              "created_at": "2020-11-09T00:56:43Z",
                              "sha": "e61f79c0846489ba09504bcd23ec3aa356469eca"
                         },
                         {
                              "message": "fix external link and betaFeature components",
                              "created_at": "2020-11-08T15:34:15Z",
                              "sha": "c6b5589da82b301e06995f7086f88b9e8e83c54d"
                         },
                         {
                              "message": "fix updater setter",
                              "created_at": "2020-05-27T01:39:21Z",
                              "sha": "9f9c618a8681d84a465eab18e2bfc5861c832577"
                         },
                         {
                              "message": "added file size detail and artists card fixed",
                              "created_at": "2020-05-27T00:47:07Z",
                              "sha": "ef42358d19433b9486179b973761b8280fe7a2f6"
                         },
                         {
                              "message": "fix search input",
                              "created_at": "2020-05-20T16:18:33Z",
                              "sha": "ffb635e2847ce142f78b6bc3ce8e7849a67200f6"
                         },
                         {
                              "message": "fix titlebar buttons width",
                              "created_at": "2020-05-20T16:11:18Z",
                              "sha": "cb04c98bf96a968313f1e3d669b970d898b6e5ae"
                         },
                         {
                              "message": "fix resetSettings button",
                              "created_at": "2020-05-20T14:58:46Z",
                              "sha": "b6e6e38e772a7d5f0adbc2b29767a8e1fc2d02c9"
                         },
                         {
                              "message": "Merge pull request #4 from e6Hub/dev\n\nfixing purgecss",
                              "created_at": "2020-04-29T01:03:43Z",
                              "sha": "1483713af3be4deec37c098b9706e119f2a4eb8a"
                         },
                         {
                              "message": "fixing purgecss",
                              "created_at": "2020-04-29T01:01:25Z",
                              "sha": "74b592757535379cd4a8139cb42325bfb17e214d"
                         },
                         {
                              "message": "fix rpc and launch for Windows 10",
                              "created_at": "2019-12-26T19:51:20Z",
                              "sha": "c6011ad928182b4c6e86a0202ec122db31516961"
                         },
                         {
                              "message": "hotfix 2",
                              "created_at": "2019-12-02T23:50:05Z",
                              "sha": "6cf08e25d71e70e4093918d2d1d2515fffa9cf58"
                         },
                         {
                              "message": "hotfix link",
                              "created_at": "2019-12-02T22:46:13Z",
                              "sha": "93d9ddcc962c66cc4e65ba164d0bddef17311f5d"
                         },
                         {
                              "message": "adding a download button and some fixes",
                              "created_at": "2019-11-30T18:06:33Z",
                              "sha": "9388897840a16d93ca88a8cd58b76a8f848f7a21"
                         },
                         {
                              "message": "some fixes",
                              "created_at": "2019-11-30T15:01:06Z",
                              "sha": "aa4915b7851aa17da9cb8208c9b1690f1ffc9c99"
                         },
                         {
                              "message": "hotfix",
                              "created_at": "2019-11-28T22:21:58Z",
                              "sha": "5512e0099018cbec20289dd0dc146334b7af5acd"
                         },
                         {
                              "message": "keybinds fixes",
                              "created_at": "2019-11-28T22:03:28Z",
                              "sha": "21211a440fa59198606c00d274324b8555a703c4"
                         },
                         {
                              "message": "fixing updater (again)",
                              "created_at": "2019-11-27T19:15:05Z",
                              "sha": "c64e3da556a384fda0365a0a5226c0b9ea89c167"
                         },
                         {
                              "message": "fixing updater",
                              "created_at": "2019-11-27T18:54:40Z",
                              "sha": "033f859001d6adf0043b70c3e1029b31b925727e"
                         },
                         {
                              "message": "fixing protocol scheme",
                              "created_at": "2019-11-24T18:02:17Z",
                              "sha": "84a29dd138c85cf5a2b8a30df880b5ec58277a24"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 2,
                    "promise": 4,
                    "async": 1
               }
          },
          {
               "index": 7,
               "repoFullName": "apache/cordova-fetch",
               "creationDate": "2016-11-28",
               "languages": {
                    "JavaScript": 19903
               },
               "stars": 23,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 7,
                    "total_issues": 16,
                    "issues": [
                         {
                              "title": "cordova prepare : failed to fetch plugins with github spec with npm@7",
                              "description": "# Bug Report\r\n\r\n## Problem\r\nOn my CI builds (clean every run), I run :\r\n- npm install\r\n- cordova prepare\r\nDuring the cordova prepare step, plugins are already installed, so it should no fetch them\r\n\r\n### What is expected to happen?\r\nWith npm@6.14.11 :\r\n\r\nExtract of the logs pertaining to plugin cordova.plugins.diagnostic :\r\n```\r\nDiscovered saved plugin \"cordova-plugin-file-transfer\". Adding it to the project\r\nInstalling \"cordova-plugin-file-transfer\" for android\r\nPlugin dependency \"cordova-plugin-file@6.0.2\" already fetched, using that version.\r\nDependent plugin \"cordova-plugin-file\" already installed on android.\r\nInstalling \"cordova-plugin-file-transfer\" for ios\r\n```\r\n\r\n### What does actually happen?\r\nWith npm@7.6.0 :\r\n\r\nExtract of the logs pertaining to plugin cordova.plugins.diagnostic :\r\n```\r\nDiscovered saved plugin \"cordova-plugin-file-transfer\". Adding it to the project\r\nNo scripts found for hook \"before_plugin_add\".\r\nCalling plugman.fetch on plugin \"git+https://github.com/dpa99c/cordova-plugin-file-transfer.git\"\r\nfetch: Installing git+https://github.com/dpa99c/cordova-plugin-file-transfer.git to /Users/vagrant/git\r\nRunning command: npm install git+https://github.com/dpa99c/cordova-plugin-file-transfer.git --no-save\r\nCommand finished with error code 0: npm install,git+https://github.com/dpa99c/cordova-plugin-file-transfer.git,--no-save\r\nFailed to restore plugin \"cordova-plugin-file-transfer\" from config.xml. You might need to try adding it again. Error: Failed to fetch plugin git+https://github.com/dpa99c/cordova-plugin-file-transfer.git via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nCould not determine package name from output:\r\n```\r\n\r\n## Information\r\npackage.json :\r\n```\r\n  \"dependencies\": {\r\n    \"cordova-plugin-file-transfer\": \"git+https://github.com/dpa99c/cordova-plugin-file-transfer.git\",\r\n    ...\r\n  }\r\n```\r\nI have the same issue with github dependencies with syntax : \r\n`github:dpa99c/cordova-plugin-file-transfer` \r\n\r\n### Command or Code\r\n`ionic cordova prepare --no-build --prod --release`\r\n\r\n\r\n### Environment, Platform, Device\r\n<!-- In what environment, on what platform or on which device are you experiencing the issue? -->\r\n\r\n\r\n\r\n### Version information\r\nStack used: Xcode 12.1.x, on macOS 10.15.6 (Catalina)\r\nionic : 5.4.16\r\ncordova : 9.0.0\r\ncordova-common: 3.2.0\r\ncordova-fetch : 2.0.1\r\n\r\n\r\n## Checklist\r\n<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->\r\n\r\n- [x] I searched for existing GitHub issues\r\n- [x] I updated all Cordova tooling to most recent version\r\n- [x] I included all the necessary information above\r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2021-04-28T10:52:56Z",
                              "closedAt": "2021-04-28T15:33:07Z",
                              "lastComment": "2021-04-28T15:57:50Z",
                              "commentCount": 2
                         },
                         {
                              "title": "cordova@8.0.0 -> cordova@9.0.0 breaks plugin installs using git repos or local directories",
                              "description": "# Bug Report\r\n\r\n## Problem\r\n\r\n- in cordova@8.0.0, installing plugins from git repos works\r\n- in cordova@9.0.0, installing plugins from the same identical git repos fails\r\n\r\n\r\n### What is expected to happen?\r\n\r\n```\r\n$ npx cordova plugin add https://github.com/phonegap/phonegap-plugin-contentsync.git \r\n```\r\n\r\nshould succeed since \"url to a git repository containing a plugin.xml\" is a [valid plugin-spec](https://cordova.apache.org/docs/en/latest/reference/cordova-cli/index.html#plugin-spec).\r\n\r\n### What does actually happen?\r\n\r\n- the plugin add succeeds on cordova@8.0.0\r\n- the plugin add fails on cordova@9.0.0\r\n\r\n\r\n## Information\r\n\r\n### on cordova@8.0.0, plugins can be added using either the registry or a git URL\r\n\r\n```\r\n$ npx cordova --version\r\n8.0.0\r\n```\r\n\r\n```\r\n$ npx cordova plugin add https://github.com/phonegap/phonegap-plugin-contentsync.git\r\nInstalling \"phonegap-plugin-contentsync\" for android\r\nInstalling \"phonegap-plugin-contentsync\" for ios\r\nAdding phonegap-plugin-contentsync to package.json\r\nSaved plugin info for \"phonegap-plugin-contentsync\" to config.xml\r\n```\r\n\r\n```\r\n$ npx cordova plugin rm phonegap-plugin-contentsync\r\nUninstalling phonegap-plugin-contentsync from android\r\nUninstalling phonegap-plugin-contentsync from ios\r\nRemoving \"phonegap-plugin-contentsync\"\r\nRemoving plugin phonegap-plugin-contentsync from config.xml file...\r\nRemoving phonegap-plugin-contentsync from package.json\r\n```\r\n\r\n```\r\n$ npx cordova plugin add phonegap-plugin-contentsync\r\nInstalling \"phonegap-plugin-contentsync\" for android\r\nInstalling \"phonegap-plugin-contentsync\" for ios\r\nAdding phonegap-plugin-contentsync to package.json\r\nSaved plugin info for \"phonegap-plugin-contentsync\" to config.xml\r\n```\r\n\r\n```\r\n$ npx cordova plugin rm phonegap-plugin-contentsync\r\nUninstalling phonegap-plugin-contentsync from android\r\nUninstalling phonegap-plugin-contentsync from ios\r\nRemoving \"phonegap-plugin-contentsync\"\r\nRemoving plugin phonegap-plugin-contentsync from config.xml file...\r\nRemoving phonegap-plugin-contentsync from package.json\r\n```\r\n\r\n### In the same directory, with cordova@9.0.0, plugins can only be added using the registry, and only intermittently\r\n\r\n```\r\n$ npm install cordova@9.0.0\r\n\r\n+ cordova@9.0.0\r\nadded 161 packages from 112 contributors, removed 73 packages, updated 53 packages and audited 1707 packages in 19.859s\r\n```\r\n\r\nNote that, in the case of the registry add, the first run of the command fails, and the second run of the identical command succeeds\r\n\r\n```\r\n$ npx cordova plugin add phonegap-plugin-contentsync\r\nFailed to fetch plugin phonegap-plugin-contentsync via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nCould not determine package name from output:\r\nphonegap-plugin-contentsync@1.4.2 node_modules/phonegap-plugin-contentsync\r\n\r\n$ npx cordova plugin add phonegap-plugin-contentsync\r\nInstalling \"phonegap-plugin-contentsync\" for android\r\nInstalling \"phonegap-plugin-contentsync\" for ios\r\nAdding phonegap-plugin-contentsync to package.json\r\n```\r\n\r\nHowever, the git add always fails.\r\n\r\n\r\n```\r\n$ npx cordova plugin add https://github.com/phonegap/phonegap-plugin-contentsync.git\r\nFailed to fetch plugin https://github.com/phonegap/phonegap-plugin-contentsync.git via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nCould not determine package name from output:\r\nphonegap-plugin-contentsync@1.4.2 node_modules/phonegap-plugin-contentsync\r\n\r\n$ npx cordova plugin add https://github.com/phonegap/phonegap-plugin-contentsync.git\r\nFailed to fetch plugin https://github.com/phonegap/phonegap-plugin-contentsync.git via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nCould not determine package name from output:\r\nphonegap-plugin-contentsync@1.4.2 node_modules/phonegap-plugin-contentsync\r\n\r\n$ npx cordova plugin add https://github.com/phonegap/phonegap-plugin-contentsync.git\r\nFailed to fetch plugin https://github.com/phonegap/phonegap-plugin-contentsync.git via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nCould not determine package name from output:\r\nphonegap-plugin-contentsync@1.4.2 node_modules/phonegap-plugin-contentsync\r\n```\r\n\r\n### Command or Code\r\n\r\n```\r\n$ cordova plugin add <git URL>\r\n```\r\n\r\nOR\r\n\r\n```\r\n$ cordova plugin add <local URL>\r\n```\r\n\r\n### Environment, Platform, Device\r\nMac OSX Catalina 10.15.5\r\n\r\n### Version information\r\nFor cordova and ionic:\r\n\r\n```\r\n$ npx cordova --version\r\n9.0.0 (cordova-lib@9.0.1)\r\n$ npx ionic --version\r\n6.10.1\r\n```\r\n\r\nFor other cordova dependencies, I have attached my package.json\r\n[package.json.gz](https://github.com/apache/cordova-lib/files/4916692/package.json.gz)\r\n\r\nFor the rest of the environment:\r\n- OSX 10.15.5\r\n- Android Studio 4.0\r\n- Xcode 11.5\r\n\r\n```\r\nexport NVM_VERSION=0.35.3\r\nexport NODE_VERSION=14.5.0\r\nexport NPM_VERSION=6.14.5\r\n```\r\n\r\n## Checklist\r\n<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->\r\n\r\n- [x] I searched for existing GitHub issues\r\n- [x] I updated all Cordova tooling to most recent version\r\n- [x] I included all the necessary information above\r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2020-07-14T05:18:43Z",
                              "closedAt": "2020-07-15T00:14:49Z",
                              "lastComment": "2020-07-15T00:14:46Z",
                              "commentCount": 10
                         },
                         {
                              "title": "cordova-fetch cannot install plugins from git repos with npm 3 if project has unmet peer dependencies",
                              "description": "# Bug Report\r\n\r\nAs the subject line says, the `cordova-fetch` module cannot install plugins from git repositories when used with npm 3 (and perhaps 4 - I haven't tested that).\r\n\r\n## Problem\r\n\r\nWhen I run `cordova plugin add --save git+https://github.com/apache/cordova-plugin-inappbrowser.git`, I get an error message instead of the plugin installing correctly (this happens with every git repository I've tested).\r\n\r\n### What is expected to happen?\r\n\r\nI expect the plugin to install correctly.\r\n\r\n### What does actually happen?\r\n\r\nI see the following error output:\r\n\r\n```\r\nFailed to fetch plugin git+https://github.com/apache/cordova-plugin-inappbrowser.git via registry.\r\nProbably this is either a connection problem, or plugin spec is incorrect.\r\nCheck your connection and plugin name/version/URL.\r\nError: Cannot find module 'UNMET/package.json' from '/Users/neagleson/cordova-fetch-bug-demo/test'\r\n```\r\n\r\n## Information\r\n<!-- Include all relevant information that might help understand and reproduce the problem -->\r\n\r\nThe problematic code is [here](https://github.com/apache/cordova-fetch/blob/d2be9307f31ae8981aa451e91904febb081bce43/index.js#L99). It assumes that the last line of output will have the installed plugin's spec on it, but that is not true when there is an unmet peer dependency - hence the `'UNMET'` string in the error message.\r\n\r\n\r\n### Command or Code\r\n<!-- What command or code is needed to reproduce the problem? -->\r\n\r\nHere is a script that reliably reproduces the problem on my machine (Mac OS X 10.14.6). It assumes a working `node` and `npm` version of some sort are already installed.\r\n\r\n```bash\r\n#! /bin/bash\r\n\r\nmkdir -p \"$HOME/cordova-fetch-bug-demo\"\r\n\r\ncd \"$HOME/cordova-fetch-bug-demo\"\r\n\r\n# Accept all default options when prompted\r\nnpm init\r\n\r\nnpm install --save cordova@9.0.0\r\nnpm install --save npm@3.10.3\r\n\r\nexport PATH=\"$HOME/cordova-fetch-bug-demo/node_modules/.bin:$PATH\"\r\n\r\ncordova create test com.example.cordovafetchbug CordovaFetchBug\r\n\r\ncd test\r\n\r\ncordova platform add ios\r\n\r\n# Adding a dependency that has an unmet peer dependency to trigger the issue\r\nnpm install --save s3-sync-aws@1.1.0\r\n\r\ncordova plugin add --save git+https://github.com/apache/cordova-plugin-inappbrowser.git\r\n```\r\n\r\n### Environment, Platform, Device\r\n<!-- In what environment, on what platform or on which device are you experiencing the issue? -->\r\n\r\n\r\n### Version information\r\n<!-- \r\nWhat are relevant versions you are using?\r\nFor example:\r\nCordova: Cordova CLI, Cordova Platforms, Cordova Plugins \r\nOther Frameworks: Ionic Framework and CLI version\r\nOperating System, Android Studio, Xcode etc.\r\n-->\r\n\r\nAs documented above, Cordova CLI 9, default version of the iOS platform, installing the cordova-inapp-browser plugin from Git, XCode 10.1, on Mac OS X 10.14.6.\r\n\r\n\r\n## Checklist\r\n<!-- Please check the boxes by putting an x in the [ ] like so: [x] -->\r\n\r\n- [X] I searched for existing GitHub issues\r\n- [X] I updated all Cordova tooling to most recent version\r\n- [X] I included all the necessary information above\r\n",
                              "label": "bug",
                              "createdAt": "2019-09-20T21:56:23Z",
                              "closedAt": "2021-09-26T14:11:08Z",
                              "lastComment": "2021-09-26T14:11:08Z",
                              "commentCount": 9
                         },
                         {
                              "title": "Install a cordova plugin by tagged version from a custom git repo fails",
                              "description": "We're having trouble installing plugins from a private git repository by url.\r\n\r\n`cordova plugin --verbose add git+https://gitlab.internal/cordova-plugin-our-custom-plugin.git`\r\n\r\nAdding an existing tag to the url to make cordova-fetch fail:\r\n`cordova plugin --verbose add git+https://gitlab.internal/cordova-plugin-our-custom-plugin.git#1.11.0`\r\n\r\nThe error implies, that the destination path could not be found:\r\n\r\n```\r\nFailed to get absolute path to installed module\r\n    at C:\\Users\\xyz\\AppData\\Roaming\\npm\\node_modules\\cordova\\node_modules\\cordova-lib\\src\\plugman\\fetch.js:173:37\r\n```\r\nSince `--nofetch` is deprecated in recent versions of cordova, is there a way to make this work?",
                              "label": "bug",
                              "createdAt": "2018-10-31T07:53:55Z",
                              "closedAt": "2019-11-01T22:14:48Z",
                              "lastComment": "2019-11-01T22:14:48Z",
                              "commentCount": 2
                         },
                         {
                              "title": "Incorrect module ID in case of certain URL patterns",
                              "description": "From review of PR #38 (`1.3.1` patch release updates on `1.3.x` branch) and unit testing in WIP PR #39 we discovered that the code will use incorrect module ID in case of certain URL patterns on `1.3.1`. It is not yet certain whether or not this would be an issue on `master`.\r\n\r\nSample URLs where the incorrect module ID is observed in the unit tests in WIP PR #39:\r\n\r\n- `https://scm.git.service.io/user/my-repo.git`\r\n- `git://scm.git.service.io/user/my-repo.git`\r\n- `https://scm.service.io/user/my-repo-other-url` where `npm` indicates that it installed `my-repo@2.0.0`\r\n- `https://scm.service.io/user/my-repo#old-tag`\r\n- `git://scm.service.io/user/my-repo#old-tag`\r\n\r\nUnfortunately the unit tests in WIP PR #39 will not work on `master` due to changes in the code.\r\n\r\nTODO:\r\n- [ ] add unit testing to cover this behavior in `master`\r\n- [ ] resolve on `master` if needed\r\n- [ ] determine whether or not there is any need to resolve this issue on `1.3.x`, before next major release is published from the changes in `master`",
                              "label": "bug",
                              "createdAt": "2018-08-10T18:27:56Z",
                              "closedAt": "2018-08-14T21:53:04Z",
                              "lastComment": "2018-08-14T21:53:04Z",
                              "commentCount": 3
                         },
                         {
                              "title": "cordova-fetch patch release August 2018",
                              "description": "Migrated from <https://issues.apache.org/jira/browse/CB-14251>, with minor updates:\r\n\r\n_`1.3.x` patch release_ wanted with the following updates:\r\n * repo URL fix from GH-20\r\n * explicit requirement for cordova-common@2.2.5 (or cordova-common@^2.2.5) in dependencies, which would be an in-range update (not wanted in `master` branch, see note below)\r\n * _resolve coho audit-license-headers issue in `1.3.x` patch release branch (cherry-pick of some commits from GH-36) ref: GH-35_\r\n\r\nFollowing steps at <https://github.com/apache/cordova-coho/blob/master/docs/tools-release-process.md> (with some minor adjustments)\r\n\r\nNote: cordova-common@^2.2.5 dependency update is not wanted in `master` branch. The master branch of this and other Cordova repos should now target the next major release as discussed in [this dev@cordova.apache.org thread](https://lists.apache.org/thread.html/083ffe568bad2a8adc5533cbe5aca481bdd921e22a6aad9602aaded2@%3Cdev.cordova.apache.org%3E).",
                              "label": "bug",
                              "createdAt": "2018-08-06T21:52:31Z",
                              "closedAt": "2018-09-26T09:05:49Z",
                              "lastComment": "2018-09-26T09:05:49Z",
                              "commentCount": 1
                         },
                         {
                              "title": "coho audit-license-headers issues in cordova-fetch",
                              "description": "_Migrated_ from <https://issues.apache.org/jira/browse/CB-14256>:\r\n\r\n`coho audit-license-headers -r fetch` uncovered the following text files without a valid license header:\r\n\r\n- `spec/support/dummy-local-plugin/plugin.xml`\r\n- `spec/support/repo-name-neq-plugin-id.git/HEAD`\r\n- `spec/support/repo-name-neq-plugin-id.git/config`\r\n- `spec/support/repo-name-neq-plugin-id.git/refs/heads/master`\r\n\r\nOn the `1.3.x` branch this issue only shows up in `spec/support/dummy-local-plugin/plugin.xml` at this time.\r\n\r\nRecommended solution is to add standard header to `spec/support/dummy-local-plugin/plugin.xml` and add the other files to `.ratignore`.",
                              "label": "bug",
                              "createdAt": "2018-08-06T21:06:51Z",
                              "closedAt": "2018-08-06T22:42:27Z",
                              "lastComment": "2018-08-06T22:26:01Z",
                              "commentCount": 4
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 17,
                    "total_commits": 74,
                    "bug_commits": [
                         {
                              "message": "fix: cordova-fetch with npm@7 (#91)\n\n* fix: determine installed package's name on npm 7\r\n\r\n* test: make expectations work for npm 5 to 7\r\n\r\nThis addresses the following changes in behavior.\r\n\r\nSaved GitHub URL format in package.json:\r\n- npm 6: git+https://github.com/apache/cordova-android.git#4.1.x\r\n- npm 7: github:apache/cordova-android#4.1.x\r\n\r\nEmpty devDependencies format in package.json:\r\n- npm 6: `{}`\r\n- npm 7: `undefined`\r\n\r\n* ci: add node@15 w/ npm@7\r\n\r\n* ci: use npm7 version that fixed npm/cli#2309",
                              "created_at": "2021-01-26T08:50:06Z",
                              "sha": "d001b887802c1f986b57253b8ca8a4337c7173aa"
                         },
                         {
                              "message": "fix: do not pack rejections from resolve in array (#88)",
                              "created_at": "2020-10-15T21:09:38Z",
                              "sha": "8dc1fe1685d8fdb39a51017fbf300ba9b57366a5"
                         },
                         {
                              "message": "fix: use POSIX-style paths for require.resolve & Co (#90)\n\nAlthough platform-specific paths usually work just fine, this is the way\r\nit should be (see https://nodejs.org/api/modules.html).",
                              "created_at": "2020-10-15T19:05:44Z",
                              "sha": "4868971f5ac43fd8b392b635fdb704c0605697d1"
                         },
                         {
                              "message": "refactor: modernize code & update README (#82)\n\n* refactor: transform var to let/const\r\n* refactor: consolidate cordova-common vars\r\n* refactor: transform arrow functions & arrow returns\r\n* refactor: transform template strings\r\n* doc(README): update & formatting\r\n* chore(npm): update package repo & bugs url\r\n* chore: apply suggestions\r\n* chore: revert promise chain flattening\r\n\r\nCo-authored-by: Raphael von der Grün <raphinesse@gmail.com>",
                              "created_at": "2020-03-31T00:41:22Z",
                              "sha": "32d0f23f7ec0a54a096baac5c3c916de6673ef5c"
                         },
                         {
                              "message": "Work around npm bug when uninstalling old cordova platforms (#78)\n\nWhen using `npm@>=6.11.0` on Windows, `npm uninstall`\r\nof `cordova-android@5.1.1` will leave an empty folder\r\n`node_modules/cordova-android/node_modules` behind. This causes one of\r\nour tests to fail but it is very likely an issue with npm. Furthermore\r\nthis is very unlikely to affect users of `cordova-fetch` in production.",
                              "created_at": "2019-10-31T02:43:05Z",
                              "sha": "6e78b1a21e3970aaae6aa67d9e3f5ec1df1a3294"
                         },
                         {
                              "message": "Look for node_modules in any recursive parent directory (#44)\n\nThis change causes `cordova-fetch` to look for already installed packages using Node.js' module resolution algorithm. It considers directories from NODE_PATH if it is set, but it will not take the fixed set of Node.js GLOBAL_FOLDERS into account.",
                              "created_at": "2018-09-28T07:44:29Z",
                              "sha": "f37c7baddc6728f91612f228f34a696b61bc1e89"
                         },
                         {
                              "message": "Speed up tests by about 250%\n\n- Add local git fixture repo to speed up test ~50s to ~5s\n- Reduce run time of longest test from ~60s to ~25s\n- Reduce amount of git tests for double fetch tests",
                              "created_at": "2018-06-16T12:01:02Z",
                              "sha": "36ecb8c105dd6b2bc0c18f9abd30cc444150e8db"
                         },
                         {
                              "message": "Merge pull request #15 from raphinesse/fix-linting\n\nFix linting",
                              "created_at": "2018-06-05T06:48:21Z",
                              "sha": "3a98f78be5e6ce7a86df15473c8c3c6bc54daece"
                         },
                         {
                              "message": "Merge pull request #13 from devtobo/CB-13503-squashed\n\nCB-13503 fix trimID bug when using file:path/to/plugin",
                              "created_at": "2018-02-20T19:07:48Z",
                              "sha": "2932d1890f55c449f20aeba87abb30af266bc8d4"
                         },
                         {
                              "message": "CB-13503 fix trimID bug when using file:path/to/plugin",
                              "created_at": "2018-02-16T21:19:17Z",
                              "sha": "234a45f5e3c71808cda8647f737b8692df37303f"
                         },
                         {
                              "message": "Merge pull request #11 from stevengill/master\n\n CB-13055: fixed failing tests in cordova-lib",
                              "created_at": "2017-12-14T00:23:03Z",
                              "sha": "a4bf668c5596056f9d030ff2bed0baa5122d4f70"
                         },
                         {
                              "message": "CB-13055: fixed failing tests in cordova-lib",
                              "created_at": "2017-12-13T23:23:03Z",
                              "sha": "1fd25de9caeaea29126b25fcc7745a3843f8da12"
                         },
                         {
                              "message": "CB-13308, CB-13252 fix issue with plugins turning into symlinks on restore",
                              "created_at": "2017-10-03T05:57:49Z",
                              "sha": "d54b2465e99f6ebd11642d5cc9237d8674d732ca"
                         },
                         {
                              "message": "fixfetch : updated index.js to deal with local path",
                              "created_at": "2017-02-15T18:19:39Z",
                              "sha": "f0b253571947f3b6448674232c0b10e9380c6749"
                         },
                         {
                              "message": "Revert \"attempting to fix failing travis and appveyor tests\"\n\nThis reverts commit bebbbe78cf8f9fecc95e99433b41fea625eb3c33.",
                              "created_at": "2016-06-05T04:59:58Z",
                              "sha": "0b67092bdf8eed7f454e4e4143bdd34e6f585648"
                         },
                         {
                              "message": "CB-11252 minor fix to trimID function in cordova-fetch",
                              "created_at": "2016-06-04T00:14:38Z",
                              "sha": "680306b06f56b60ee4ce8cee76f239814185857f"
                         },
                         {
                              "message": "attempting to fix failing travis and appveyor tests",
                              "created_at": "2016-06-03T20:33:08Z",
                              "sha": "79b65794f1d6b9bfb7ffa9e762961bb2709ba5f7"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 0,
                    "promise": 3,
                    "async": 2
               }
          },
          {
               "index": 8,
               "repoFullName": "WietseWind/fetch-xrpl-transactions",
               "creationDate": "2018-08-15",
               "languages": {
                    "JavaScript": 22398
               },
               "stars": 22,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 1,
                    "total_issues": 3,
                    "issues": [
                         {
                              "title": "No data since 2020-12-23",
                              "description": "It seems that the `transactions` table stopped updating since 12/23. Are there any plans to fix this? Thanks!",
                              "label": "unlabeledBug",
                              "createdAt": "2021-01-05T20:23:48Z",
                              "closedAt": "2021-01-05T22:25:14Z",
                              "lastComment": "2021-01-05T23:25:40Z",
                              "commentCount": 2
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 2,
                    "total_commits": 29,
                    "bug_commits": [
                         {
                              "message": "Merge pull request #11 from ledhed2222/gw/enhance-schema\n\nVarious enhancements and fixes",
                              "created_at": "2022-08-03T21:32:32Z",
                              "sha": "159393dd8079df3fc4f05384376017fdd7ff3d31"
                         },
                         {
                              "message": "Fix various bugs",
                              "created_at": "2022-08-02T01:50:11Z",
                              "sha": "bb3caf13a705db6b9882720ed138c87ca7be4b34"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 0,
                    "promise": 3,
                    "async": 1
               }
          },
          {
               "index": 9,
               "repoFullName": "efwGrp/efw3.X",
               "creationDate": "2016-08-16",
               "languages": {
                    "JavaScript": 1518810,
                    "Java": 295487,
                    "HTML": 15782,
                    "CSS": 14881,
                    "Roff": 3992,
                    "Batchfile": 1198
               },
               "stars": 16,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 2,
                    "total_issues": 21,
                    "issues": [
                         {
                              "title": "the date of timezone utc+0:00 is dispalyed",
                              "description": "when \r\n(new Date()).debug(\"now\");\r\n\r\nthe date of timezone utc+0:00 is dispalyed.\r\nhope to display the time of  the local timezone.",
                              "label": "unlabeledBug",
                              "createdAt": "2018-03-08T07:15:56Z",
                              "closedAt": "2018-10-15T08:46:56Z",
                              "lastComment": "2018-10-15T08:46:56Z",
                              "commentCount": 1
                         },
                         {
                              "title": "JAVA RETURN PROBLEM",
                              "description": "excuse me,i found the same problem like i asked several days ago.\r\nwhen i excute a method in java and want to get the return value,then the problem occured again.\r\nis this a bug?\r\n\r\n実行時エラーが発生しました。\r\neventId=sample_save\r\nmessage=InternalError: Java class \"[B\" has no public instance field or method named \"toJSON\". (#173)\r\n\r\nhere are the details:\r\n\r\njs File:\r\nvar sample_save={};\r\nsample_save.name=\"保存文件\";\r\nsample_save.paramsFormat={\r\n\t\"#nom\":\"required:true;display-name:用户名\",\r\n};\r\nsample_save.fire=function(params){\r\n\tvar nom=params[\"#nom\"];\r\n\tvar rsPwd= (db.select(\"download_detailInfo\",\"download\",{\"nom\":nom}))\r\n\t.map({\"INFO\":\"BOOKID\"}).getArray();\r\n\t var XXX = Packages.create.PoiCommon.CreateHtml(nom, \"D:\\Tomcat 7.0\\webapps\\efw-3.0-oracl\\WEB-INF\\efw\\storage\");\r\n\t return (new Result()).alert(XXX);  //  error\r\n         return (new Result()).alert(123);  // correct\r\n\r\n};\r\n----------------------------------------------------------------------------------------------------\r\njava File:\r\n\r\npackage create;\r\npublic class PoiCommon {\r\n    public static String CreateHtml(String pname,String purl){\r\n\tSystem.out.println(pname);\r\n\tSystem.out.println(purl);\r\n\treturn purl;\r\n    }\r\n}",
                              "label": "unlabeledBug",
                              "createdAt": "2017-01-12T09:38:50Z",
                              "closedAt": "2017-01-13T07:58:52Z",
                              "lastComment": "2017-01-13T02:00:27Z",
                              "commentCount": 1
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 13,
                    "total_commits": 75,
                    "bug_commits": [
                         {
                              "message": "3.12.010 to fix bug about db datetimestamp saving , add log about brms",
                              "created_at": "2019-04-17T00:15:57Z",
                              "sha": "fb2f32dd256766d7d4a12b19c0ee6fa7b3208438"
                         },
                         {
                              "message": "3.12.007 to fix serveral bug and add muti-threads",
                              "created_at": "2019-04-04T01:05:27Z",
                              "sha": "74597e364c8fe6c5dbe0a16bfa46b88fc2e70d40"
                         },
                         {
                              "message": "3.8.216 fixed a bug about clicking a button twice quickly.",
                              "created_at": "2018-05-09T04:03:17Z",
                              "sha": "33f864f6b3da7049336c962444e95e487ad138e9"
                         },
                         {
                              "message": "3.8.214 several bug fixed.\n\n1. formatter for wide date\n2. Excel hide row\n3. Mail from account",
                              "created_at": "2018-03-05T03:04:50Z",
                              "sha": "e621fa2bae804a164d330c07a8c8bc7636ab0191"
                         },
                         {
                              "message": "3.8.209 to fix a bug about batch not running",
                              "created_at": "2018-01-22T07:01:29Z",
                              "sha": "fb5673e5b13deed8312b7b59c35f2aa9b2288132"
                         },
                         {
                              "message": "3.7.209 fixed a bug about tags failing in resin4",
                              "created_at": "2017-03-22T08:29:22Z",
                              "sha": "cc853ea158bb297db5c898cf8056e1a10a8aebc1"
                         },
                         {
                              "message": "3.7.207 fixed a bug about chart draw.",
                              "created_at": "2017-03-10T04:44:52Z",
                              "sha": "4647fb0717e31e04bd6b1621a43f28b20314df32"
                         },
                         {
                              "message": "3.7.206 fixed a bug about chart failing when first col is number.",
                              "created_at": "2017-03-10T01:14:43Z",
                              "sha": "edf1c58e1e94f60882eefdfacb56a46b6adf3524"
                         },
                         {
                              "message": "fixed a bug about loading div z-index less than dialog.",
                              "created_at": "2017-03-03T04:07:43Z",
                              "sha": "265cdd0e249a0804481d89410aada4aec218ed5b"
                         },
                         {
                              "message": "3.7.202 fixed a bug about poi modification effecting to template excel file.",
                              "created_at": "2017-03-03T02:08:32Z",
                              "sha": "6e85e7d5f5008b99bc22b670e09d8262b1ddccee"
                         },
                         {
                              "message": "3.7.201 to fix a bug about array params to brms.",
                              "created_at": "2017-02-24T00:30:51Z",
                              "sha": "e2fe83af592435f3ff0f6f5b5e9757065324599a"
                         },
                         {
                              "message": "3.5.016 debug a problem about cookie\n\nTo  WinterCool2968, thank you for bug reporting.",
                              "created_at": "2017-01-08T06:29:48Z",
                              "sha": "b82a7dd7fce9c5ee9a6ce103c1b36c670907b0f5"
                         },
                         {
                              "message": "3.5.015\n\nso many bugs.",
                              "created_at": "2017-01-02T08:31:01Z",
                              "sha": "a2cf6c4cf8d5ae79267504bd15bc86889376d3d1"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 5,
                    "promise": 0,
                    "async": 1
               }
          },
          {
               "index": 10,
               "repoFullName": "efwGrp/efw4.X",
               "creationDate": "2019-10-12",
               "languages": {
                    "JavaScript": 1382431,
                    "CSS": 455968,
                    "Java": 339723
               },
               "stars": 14,
               "issues": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_issues": 23,
                    "total_issues": 90,
                    "issues": [
                         {
                              "title": "jsp can not do request.setCharacterEncoding, because efwCorsFilter do request.getParameter firstly. fixed 4.05.031 ",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2022-08-14T23:52:10Z",
                              "closedAt": "2022-08-14T23:52:13Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "elfinder can not download in main sub mode.  fixed 4.05.031",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2022-08-14T23:50:26Z",
                              "closedAt": "2022-08-14T23:50:32Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.05.019 fixed a bug about csv reader offset position counting.",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2022-04-17T23:36:54Z",
                              "closedAt": "2022-04-17T23:36:57Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "the lastModified date in elfinder is crazied. fixed 4.05.016",
                              "description": "elfinder receive seconds, but efw gave it milliseconds. \r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2022-03-25T06:41:33Z",
                              "closedAt": "2022-03-25T06:41:41Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "bug in BinaryReader, fixed 4.05.015",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2022-03-23T06:03:25Z",
                              "closedAt": "2022-03-24T13:28:30Z",
                              "lastComment": "2022-03-23T06:14:46Z",
                              "commentCount": 1
                         },
                         {
                              "title": "4.05.010 to fix cors for efwServlet.",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2022-01-16T12:14:01Z",
                              "closedAt": "2022-01-16T12:14:18Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.05.006 to fix a bug about excel get function to FORMULA",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2021-12-18T13:08:18Z",
                              "closedAt": "2021-12-18T13:08:22Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "booleanタイプに対して、debug関数の不具合 4.05.004",
                              "description": "true.debug()の戻り値は、Booleanオブジェクトになってしまいました。\r\n原因は、\r\nBoolean.prototype.debug = function(label) {\r\n\treturn true && this;\r\n};\r\n以下はテスト。これは想定外です。\r\n(new Boolean(true)) && true\r\n＞true\r\ntrue && (new Boolean(true)) \r\n＞Boolean {true}\r\n\r\n",
                              "label": "unlabeledBug",
                              "createdAt": "2021-11-27T06:20:13Z",
                              "closedAt": "2021-11-27T06:28:54Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "without global.js, some jdk env throw error.  Change efw.server.event.js to fix it.  4.04.003",
                              "description": "if (e.getClass().getName()==\"java.io.FileNotFoundException\"){\r\n\r\nto\r\n\r\nif (!file.exists(_eventfolder + \"/\" + eventId + \".js\")){",
                              "label": "unlabeledBug",
                              "createdAt": "2021-03-23T04:45:42Z",
                              "closedAt": "2021-03-23T05:28:51Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.02.005 SimpleDateFormat DecimalFormat are not thread safe. FormatManager.java should do something.",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-07-15T06:04:05Z",
                              "closedAt": "2020-07-17T06:27:07Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.02.003 rest client bug about return null.",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2020-07-02T02:57:08Z",
                              "closedAt": "2020-07-03T05:49:32Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.02.001 a bug about elifinder duplicate function. the new file name is wrong like 'copy..txt'",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2020-06-18T03:17:48Z",
                              "closedAt": "2020-06-25T04:29:46Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.00.015 add html tooltip option to fix google chart tooltip overlapping bug",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-05-08T22:57:57Z",
                              "closedAt": "2020-05-08T22:58:21Z",
                              "lastComment": "2020-05-16T01:38:00Z",
                              "commentCount": 1
                         },
                         {
                              "title": "4.00.012 shortcut key in a hidden dialog gives a bad effect to the main window.",
                              "description": "it is a existing bug from 3.X.  \r\nfixed.",
                              "label": "bug",
                              "createdAt": "2020-03-17T04:46:55Z",
                              "closedAt": "2020-03-17T04:47:06Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "メールのccにtoのアドレスがセットされる",
                              "description": "Mail XMLの<cc>にメールアドレスをセットすると、実際にメール送信した際にtoのアドレスがセットされます。\r\nご対応のほどよろしくお願いいたします。",
                              "label": "bug",
                              "createdAt": "2020-03-16T00:32:58Z",
                              "closedAt": "2020-03-16T01:16:03Z",
                              "lastComment": "2020-03-16T01:16:03Z",
                              "commentCount": 1
                         },
                         {
                              "title": "4.00.010 if elfinder in dialog included by part tag, it can not get \"lang\"  from client tag. becuase.",
                              "description": "the lang is saved in pagecontext by client tag.\r\nto fixed it , move lang attr from page context to request context.",
                              "label": "bug",
                              "createdAt": "2020-03-13T09:34:21Z",
                              "closedAt": "2020-03-13T09:34:26Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.00.008 bug about shortcut key Pressed continuously. fixed.",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-03-06T02:46:35Z",
                              "closedAt": "2020-03-06T02:46:40Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.00.007 if $ or \\ in mail params, error. it is a bug about replaceAll. fixed.",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-03-05T05:36:29Z",
                              "closedAt": "2020-03-05T09:17:47Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "4.00.006 setOptions cannot get chat.data, it is a bug. fixed.",
                              "description": "",
                              "label": "unlabeledBug",
                              "createdAt": "2020-02-21T06:16:56Z",
                              "closedAt": "2020-02-21T06:17:01Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "ThreadLocal framework.getWritters() need path key. Or writters will be too more to memory in some case. fixed it like 3.X in inner version 4.00.005",
                              "description": "And add version params in every url of js files.",
                              "label": "bug",
                              "createdAt": "2020-02-13T04:06:49Z",
                              "closedAt": "2020-02-13T04:10:31Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "excel.save() error when add xlsx password. fixed in inner version 4.00.003",
                              "description": "in poi 4.1.1 outputstream must be closed after encoding.",
                              "label": "bug",
                              "createdAt": "2020-01-31T08:19:30Z",
                              "closedAt": "2020-01-31T08:19:34Z",
                              "lastComment": "",
                              "commentCount": 0
                         },
                         {
                              "title": "画面送信内容が多い場合、２回目送信のURLにpost内容も入れるから長すぎてエラーになる。JWSさんの連絡。",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-01-20T06:44:22Z",
                              "closedAt": "2020-01-20T06:44:38Z",
                              "lastComment": "2020-01-20T06:44:38Z",
                              "commentCount": 1
                         },
                         {
                              "title": "global.js エラー時、エラー情報をログに出力されない。JWSさんの連絡。",
                              "description": "",
                              "label": "bug",
                              "createdAt": "2020-01-20T06:07:29Z",
                              "closedAt": "2020-01-20T06:08:59Z",
                              "lastComment": "2020-01-20T06:08:59Z",
                              "commentCount": 1
                         }
                    ]
               },
               "commits": {
                    "incomplete_results": false,
                    "status_code": "200",
                    "total_bug_commits": 6,
                    "total_commits": 49,
                    "bug_commits": [
                         {
                              "message": "4.04.006 to fix 4.04.003 and add log displaying to batch.",
                              "created_at": "2021-05-01T01:10:37Z",
                              "sha": "ac4cc571b471d6c8f3bcf6792d8363a218288d2f"
                         },
                         {
                              "message": "4.00.015 add html tooltip option to fix google chart tooltip overlapping bug",
                              "created_at": "2020-05-08T23:02:16Z",
                              "sha": "c6c800ceabfbfa16e1ddada8a0df43b841c91261"
                         },
                         {
                              "message": "4.00.011 bug fixed about mail cc.",
                              "created_at": "2020-03-16T03:05:55Z",
                              "sha": "1a573977984bea325f317434b744a3730bbdef40"
                         },
                         {
                              "message": "4.00.007 bug fixed about mail params replaceAll",
                              "created_at": "2020-03-05T09:15:34Z",
                              "sha": "9e114827e42cd49e871935ed879612d993eaaf61"
                         },
                         {
                              "message": "4.00.002 to fix the bug about  too long url error.",
                              "created_at": "2020-01-20T06:46:53Z",
                              "sha": "e7e6ac94ba8abd09346c58dbe67f5d847fd86e0c"
                         },
                         {
                              "message": "4.00.001 fixed a bug about initSLog catching exceptions from global.js",
                              "created_at": "2020-01-14T02:28:08Z",
                              "sha": "339533c1713664e98115423f434399986d343b64"
                         }
                    ]
               },
               "async_constructs": {
                    "callback": 9,
                    "promise": 1,
                    "async": 2
               }
          }
     ]
}